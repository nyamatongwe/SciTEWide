# Define SciTE settings for scriptol files.

filter.scriptol=Scriptol (sol)|*.sol|

lexer.*.sol=scriptol

file.patterns.sol=*.sol

keywordclass.scriptol= act action alias always and array as \
bool boolean break by byte \
class case catch const constant continue \
dyn def define dict do double \
echo else elsif end enum error false file for float forever function \
globak gtk \
in if ifdef import include int integer java javax \
let long match mod nil not natural null number \
or print protected public real return redo \
scan script scriptol sol short super static step until using \
var text then this true try \
void volatile while when \
undef zero
keywords.$(file.patterns.sol)=$(keywordclass.scriptol)

statement.indent.*.sol=
statement.end*.sol=
statement.lookback.*.sol=1
block.start.*.sol=10

comment.block.scriptol=`~

# scriptol styles
# White space
style.scriptol.0=fore:#808080
# Comment
style.scriptol.1=fore:#007F00,$(font.comment)
# Number
style.scriptol.2=fore:#007F7F
# String
style.scriptol.3=fore:#7F007F,$(font.monospace)
# Single quoted string
style.scriptol.4=fore:#7F007F,$(font.monospace)
# Keyword
style.scriptol.5=fore:#00007F,bold
# Triple quotes
# style.scriptol.6=fore:#7F0000
# Triple double quotes
style.scriptol.7=fore:#7F0000
# Class name definition
style.scriptol.8=fore:#0000FF,bold
# Function or method name definition
style.scriptol.9=fore:#007F7F,bold
# Operators
style.scriptol.10=bold
# Identifiers
style.scriptol.11=fore:#7F7F7F
# Comment-blocks
style.scriptol.12=fore:#7F7F7F
# End of line where string is not closed
style.scriptol.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
# Matched Operators
style.scriptol.34=fore:#0000FF,bold
style.scriptol.35=fore:#FF0000,bold
# Braces are only matched in operator style
braces.scriptol.style=10

if PLAT_WIN
        command.go.*.sol=scriptol $(FileNameExt)
        command.go.subsystem.*.sol=1

if PLAT_GTK
        command.go.*.sol=scriptol $(FileNameExt)
