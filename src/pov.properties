# Define SciTE settings for POV-Ray files.

file.patterns.pov=*.pov
filter.pov=POV-Ray (pov)|*.pov|
lexer.$(file.patterns.pov)=pov

keywords.$(file.patterns.pov)=#debug #declare #else #end #error #if #ifdef #ifndef #include #local #macro #warning #while \
aa_level aa_threshold abs absorption accuracy acos acosh adaptive adc_bailout agate agate_turb all \
all_intersections alpha altitude always_sample ambient ambient_light angle aperture append arc_angle area_light \
array asc ascii asin asinh assumed_gamma atan atan2 atanh autostop average b_spline background bezier_spline \
bicubic_patch black_hole blob blue blur_samples bounded_by box boxed bozo #break brick brick_size brightness \
brilliance bump_map bump_size bumps camera #case caustics ceil cells charset checker chr circular clipped_by clock \
clock_delta clock_on collect color color_map colour colour_map component composite concat cone confidence \
conic_sweep conserve_energy contained_by control0 control1 coords cos cosh count crackle crand cube cubic \
cubic_spline cubic_wave cutaway_textures cylinder cylindrical #default defined degrees density density_file \
density_map dents df3 difference diffuse dimension_size dimensions direction disc dispersion dispersion_samples \
dist_exp distance distance_maximum div double_illuminate eccentricity emission error_bound evaluate exp \
expand_thresholds exponent exterior extinction face_indices facets fade_color fade_colour fade_distance fade_power \
falloff falloff_angle false #fclose file_exists filter final_clock final_frame finish fisheye flatness flip floor \
focal_point fog fog_alt fog_offset fog_type #fopen form frame_number frequency fresnel function gather gif \
global_lights global_settings gradient granite gray gray_threshold green height_field hexagon hf_gray_16 hierarchy \
hollow hypercomplex iff image_height image_map image_pattern image_width initial_clock initial_frame inside \
inside_vector int interior interior_texture internal interpolate intersection intervals inverse ior irid \
irid_wavelength isosurface jitter jpeg julia julia_fractal lambda lathe leopard light_group light_source \
linear_spline linear_sweep ln load_file location log look_at looks_like low_error_factor macro magnet major_radius \
mandel map_type marble material material_map matrix max max_extent max_gradient max_intersections max_iteration \
max_sample max_trace max_trace_level media media_attenuation media_interaction merge mesh mesh2 metallic method \
metric min min_extent minimum_reuse mod mortar natural_spline nearest_count no no_bump_scale no_image no_reflection \
no_shadow noise_generator normal normal_indices normal_map normal_vectors number_of_waves object octaves off offset \
omega omnimax on once onion open orient orientation orthographic panoramic parallel parametric pass_through pattern \
perspective pgm phase phong phong_size photons pi pigment pigment_map pigment_pattern planar plane png point_at poly \
poly_wave polygon pot pow ppm precision precompute pretrace_end pretrace_start prism prod projected_through pwr \
quadratic_spline quadric quartic quaternion quick_color quick_colour quilted radial radians radiosity radius rainbow \
ramp_wave rand #range ratio #read reciprocal recursion_limit red reflection reflection_exponent refraction #render \
repeat rgb rgbf rgbft rgbt right ripples rotate roughness samples save_file scale scallop_wave scattering seed \
select shadowless sin sine_wave sinh size sky sky_sphere slice slope slope_map smooth smooth_triangle solid sor \
spacing specular sphere sphere_sweep spherical spiral1 spiral2 spline split_union spotlight spotted sqr sqrt #statistics \
steps str strcmp strength strlen strlwr strupr sturm substr sum superellipsoid #switch sys t tan tanh \
target text texture texture_list texture_map tga thickness threshold tiff tightness tile2 tiles tolerance toroidal \
torus trace transform translate transmit triangle triangle_wave true ttf turb_depth turbulence type u u_steps \
ultra_wide_angle #undef union up use_alpha use_color use_colour use_index utf8 uv_indices uv_mapping uv_vectors v \
v_steps val variance vaxis_rotate vcross vdot #version vertex_vectors vlength vnormalize vrotate vstr vturbulence  \
warp water_level waves width wood wrinkles #write x y yes z

# keywords2 is for highlighting user defined keywords or function calls or similar
keywords2.$(file.patterns.pov)=

pov.case.sensitive=1

word.characters.$(file.patterns.pov)=$(chars.alpha)$(chars.numeric)_#:.
comment.block.pov=//
comment.block.at.line.start.pov=0
comment.stream.start.pov=/*
comment.stream.end.pov=*/
comment.box.start.pov=/*
comment.box.middle.pov= *
comment.box.end.pov= */

statement.indent.$(file.patterns.pov)=5 #if #ifdef #ifndef #else #while
#statement.end.$(file.patterns.pov)=7 ;
#statement.lookback.$(file.patterns.pov)=20
block.start.$(file.patterns.pov)=9 {
block.end.$(file.patterns.pov)=9 }

#autocomplete.pov.fillups=(


# POV styles

# Default
style.pov.0=$(font.base)
# Comment
style.pov.1=$(colour.code.comment.box),$(font.code.comment.box)
# Line Comment
style.pov.2=$(colour.code.comment.line),$(font.code.comment.line)
# Doc comment
style.pov.3=$(colour.code.comment.doc),$(font.code.comment.doc)
# Number
style.pov.4=$(colour.number)
# Keyword
style.pov.5=fore:#800080
# Double quoted string
style.pov.6=fore:#FF0000,$(font.string.literal)
# Operators
style.pov.7=fore:#FF0000
#~ Identifiers
style.pov.8=
# Braces
style.pov.9=fore:#0000FF
# Keywords2
style.pov.10=fore:#B00040
#~ Braces are only matched in brace style
#braces.pov.style=9

#fore:#000000,$(font.string.literal),back:#E0C0E0,eolfilled

#command.compile.*.pov=
#command.build.*.pov=
#command.go.*.pov=

if PLAT_WIN
	command.help.$(file.patterns.pov)=$(CurrentWord)!D:\POV-Ray for Windows v3.5\help\povray35.chm
	command.help.subsystem.$(file.patterns.pov)=4

if PLAT_GTK
	#command.help.$(file.patterns.pov)=

api.$(file.patterns.pov)=$(SciteDefaultHome)\pov.api