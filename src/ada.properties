# Define SciTE settings for Ada files.

filter.ada=Ada (.ads;.adb)|*.ads;*.adb|

file.patterns.ada=*.ads;*.adb

lexer.$(file.patterns.ada)=ada

keywordclass.ada=abort abstract accept access aliased all array at begin body case constant declare delay delta digits do else elsif end entry exception exit for function generic goto if in is limited loop new null of others out package pragma private procedure protected raise range record renames requeue return reverse select separate subtype tagged task terminate then type until use when while with 
#abs and mod not or rem xor

keywords.$(file.patterns.ada)=$(keywordclass.ada)

# Ada styles
# Default
style.ada.0=fore:#000000,$(font.ada)
# Comment
style.ada.1=fore:#007F00,$(font.comment)
# Number
style.ada.2=fore:#007F7F
# keyword
style.ada.3=fore:#00007F,bold
# Double quoted string
style.ada.4=fore:#7F007F,$(font.monospace)
# Single quoted string
style.ada.5=fore:#7F007F,$(font.monospace)
# Operators
style.ada.6=fore:#00000F
# Identifiers
style.ada.7=
# End of line where string is not closed
style.ada.8=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled

statement.indent.$(file.patterns.ada)=5 begin declare else elsif exception for if is loop while
statement.end.$(file.patterns.ada)=10 ;
statement.lookback.$(file.patterns.ada)=20
block.start.$(file.patterns.ada)=10 then is
block.end.$(file.patterns.ada)=10 end

adagcc=gcc -c $(FileNameExt)

command.compile.*.ads=$(adagcc)
command.build.*.ads=gnatmake
command.go.*.ads=$(FileName)

command.compile.*.adb=$(adagcc)
command.build.*.adb=gnatmake
command.go.*.adb=$(FileName)
