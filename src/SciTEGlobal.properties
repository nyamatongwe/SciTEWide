# Global initialisation file for SciTE
# For Linux, place in $prefix/share/scite
# For Windows, place in same directory as SciTE.EXE (or Sc1.EXE)

# Globals

# Window sizes and visibility
if PLAT_WIN
	position.left=0
	position.top=0
if PLAT_GTK
	position.left=5
	position.top=22
position.width=576
position.height=740
#full.screen.hides.menu=1
split.vertical=1
#output.horizontal.size=200
#output.vertical.size=60
#horizontal.scrollbar=0
#output.horizontal.scrollbar=0
#tabbar.visible=1
#toolbar.visible=1
#statusbar.visible=1
#fileselector.width=800
#fileselector.height=600

# Sizes and visibility in edit pane
# Set line.numbers to 30 if youwant to see them
line.numbers=0
margin.width=16
#fold.margin.width=16
#blank.margin.left=4
#blank.margin.right=4
buffered.draw=1
use.palette=0

# Element styles
#view.eol=1
caret.period=500
view.whitespace=0
view.indentation.whitespace=1
view.indentation.guides=1
highlight.indentation.guides=1
#caret.fore=#FF0000
#caret.line.back=#FFFED8
#calltip.back=#FFF0FE
edge.column=200
edge.mode=0
edge.colour=#C0DCC0
braces.check=1
braces.sloppy=1
#selection.back=#E0E0E8
# DADADA used as background because it yields standard silver C0C0C0
# on low colour displays and a reasonable light grey on higher bit depths
selection.back=#DADADA
#error.marker.fore=#0000A0
#error.marker.back=#DADAFF

# Checking
are.you.sure=1
#are.you.sure.for.build=1
#load.on.activate=1
#save.on.deactivate=1
#check.if.already.open=1
default.file.ext=.cxx
#title.full.path=1
#save.recent=1
#strip.trailing.spaces=1
#save.deletes.first=1

#buffers=10
#api.*.cxx=d:\api\w.api
#win95.death.delay=1000

# Indentation
tabsize=8
indent.size=8
use.tabs=1
indent.automatic=1
indent.opening=0
indent.closing=0

# Folding
# enable folding, and show lines below when collapsed.
fold=1
fold.compact=0
fold.flags=16
fold.use.plus=1
#fold.on.open=1

# Find and Replace
#escapes.in.find.replace=1
if PLAT_WIN
	find.command=fgrep -G -n $(find.what) $(find.files)
if PLAT_GTK
	find.command=grep --line-number "$(find.what)" $(find.files)
find.files=*.c *.cxx *.h
#find.replace.matchcase=1
#find.replace.escapes=1
#find.replace.regexp=1
#find.replace.wrap=0

# Behaviour
#eol.mode=LF
#eol.auto=1
clear.before.execute=0
#vc.home.key=1
#autocompleteword.automatic=1
#caret.policy.strict=1
#caret.policy.slop=1
#caret.policy.xeven=1
#caret.policy.lines=5
#visible.policy.strict=1
#visible.policy.slop=1
#visible.policy.lines=4

# Status Bar
statusbar.number=2
statusbar.size=512
statusbar.text.1=\
li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr)
statusbar.text.2=\
$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.
statusbar.text.3=\
Now is: Date=$(CurrentDate) Time=$(CurrentTime)
statusbar.text.4=\
$(FileNameExt) : $(FileDate) ó $(FileTime) | $(FileAttr)

# Internationalisation
# Japanese
#code.page=932
# Unicode
#code.page=65001
code.page=0
#character.set=204

# Define values for use in the imported properties files
chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
chars.accented=äöåúüˇ¿‡¡·¬‚√„ƒ‰≈Â∆Ê«Á»Ë…È ÍÀÎÃÏÕÌŒÓœÔ–—Ò“Ú”Û‘Ù’ı÷ÿ¯Ÿ˘⁄˙€˚‹¸›˝ﬁ˛ﬂˆ

# The open.filter setting is only used on Windows where the file selector has a menu of filters to apply
# to the types of files seen when opening.

source.files=*.c;*.cc;*.cpp;*.cxx;*.h;*.hh;*.hxx;*.hpp;*.eh;*.ih;\
*.idl;*.odl;*.rc;*.rc2;*.dlg;*.def;\
*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;*.pag;*.dsr;*.dob;\
*.java;*.js;*.py;*.pl;*.cgi;*.lua;*.conf;\
make*;*.mak;*.dsp;*.dsw;*.vbp;*.vbg;*.vbw;\
*.properties;*.html

open.filter=\
All Source|$(source.files)|\
All Files (*.*)|*.*|\
$(filter.python)\
$(filter.cpp)\
$(filter.java)\
$(filter.web)\
$(filter.js)\
$(filter.vb)\
$(filter.properties)\
$(filter.text)\
$(filter.idl)\
$(filter.lua)\
$(filter.perl)\
$(filter.php)\
$(filter.sql)\
$(filter.conf)\
$(filter.ave)\
$(filter.ada)

# Give symbolic names to the set of fonts used in the standard styles.
if PLAT_WIN
	font.base=font:Verdana,size:10
	font.small=font:Verdana,size:9
	font.comment=font:Comic Sans MS,size:9
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.text=font:Times New Roman,size:11
	font.text.comment=font:Verdana,size:8
	font.embedded.base=font:Verdana,size:9
	font.embedded.comment=font:Comic Sans MS,size:8
	font.monospace=font:Courier New,size:10
	font.vbs=font:Lucida Sans Unicode,size:10
if PLAT_GTK
	font.base=font:lucidatypewriter,size:12
	font.small=font:lucidatypewriter,size:10
	font.comment=font:new century schoolbook,size:12
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.text=font:times,size:14
	font.text.comment=font:lucidatypewriter,size:10
	font.embedded.base=font:lucidatypewriter,size:12
	font.embedded.comment=font:lucidatypewriter,size:12
	font.monospace=font:courier,size:12
	font.vbs=font:new century schoolbook,size:12
font.js=$(font.comment)

# Give symbolic names to the set of colours used in the standard styles.
colour.code.comment.box=fore:#007F00
colour.code.comment.line=fore:#007F00
colour.code.comment.doc=fore:#3F703F
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#007F00
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#F0F0FF
colour.notused=back:#FF0000

colour.number=fore:#007F7F
colour.keyword=fore:#00007F
colour.string=fore:#7F007F
colour.char=fore:#7F007F
colour.operator=fore:#000000
colour.preproc=fore:#7F7F00
colour.error=fore:#FFFF00,back:#FF0000

# Global default styles for all languages
# Default
style.*.32=$(font.base)
# Line number
style.*.33=back:#C0C0C0,$(font.base)
# Brace highlight
style.*.34=fore:#0000FF,bold
# Brace incomplete highlight
style.*.35=fore:#FF0000,bold
# Control characters
style.*.36=
# Indentation guides
style.*.37=fore:#C0C0C0,back:#FFFFFF

# Printing - only works on Windows
if PLAT_WIN
	#print.colour.mode=1
	print.magnification=-1
	# Setup: left, right, top, bottom margins, in local units:
	# hundredths of millimeters or thousandths of inches
	print.margins=1500,1000,1000,1500
	# Header/footer:
	# && = &; &p = current page
	# &f = file name; &F = full path
	# &d = file date; &D = current date
	# &t = file time; &T = full time
	print.header.format=$(FileNameExt) ó Printed on $(CurrentDate), $(CurrentTime) ó Page $(CurrentPage)
	print.footer.format=$(FilePath) ó File date: $(FileDate) ó File time: $(FileTime)
	# Header/footer style
	print.header.style=font:Arial,size:12,bold
	print.footer.style=font:Arial Narrow,size:10,italics
	
# Warnings - only works on Windows and needs to be pointed at files on machine
#if PLAT_WIN
#	warning.findwrapped=100,E:\Windows\Media\SFX\Boing.wav
#	warning.notfound=0,E:\Windows\Media\SFX\Effect.wav
#	warning.wrongfile=0,E:\Windows\Media\SFX\Glass.wav
#	warning.executeok=0,E:\Windows\Media\SFX\Fanfare.wav
#	warning.executeko=100,E:\Windows\Media\SFX\GlassBreak.wav
#	warning.nootherbookmark=100,E:\Windows\Media\SFX\Boing2.wav

# Import all the language specific properties files
import ada
import ave
import conf
import cpp
import html
import latex
import lua
import others
import pascal
import perl
import python
import sql
import vb

