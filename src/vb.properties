# Define SciTE settings for VB files.

filter.vb=VB (.vb;.vbp;.vbs;.bas;.frm;.ctl;.cls;.pag;.dob;.dsr)|*.vb;*.vbp;*.vbs;*.bas;*.frm;*.ctl;*.pag;*.dob;*.dsr|

file.patterns.vb=*.vbs;*.frm;*.ctl;*.cls
file.patterns.wscript=*.vbs

lexer.$(file.patterns.vb)=vb

keywordclass.vb=and as attribute begin byref byval case call const \
continue dim do each else elseif end error exit false for function global \
goto if in loop me new next not nothing on optional or private public \
redim rem resume select set sub then to true type while with \
boolean byte currency date double integer long object option \
single string type variant
keywords.$(file.patterns.vb)=$(keywordclass.vb)

# VB styles
# White space
style.vb.0=fore:#000000,$(font.vbs)
# Comment
style.vb.1=fore:#007F00,$(font.comment)
# Line Comment
style.vb.2=fore:#007F00,$(font.comment)
# Doc comment
style.vb.3=fore:#7F7F7F
# Number
style.vb.4=fore:#007F7F
# Keyword
style.vb.5=fore:#00007F,bold
# Double quoted string
style.vb.6=fore:#7F007F,italics,$(font.comment)
# Single quoted string
style.vb.7=fore:#7F007F,italics,$(font.text)
# Symbols 
style.vb.8=fore:#007F7F
# Preprocessor
style.vb.9=fore:#7F7F00

# wscript
# normal execute
command.go.$(file.patterns.wscript)=$(FilePath)
command.go.subsystem.$(file.patterns.wscript)=2

# note we have no real "build"; rather "execute and capture
# compiletime and runtime errors"
command.build.$(file.patterns.wscript)=cscript "$(FilePath)"
command.build.subsystem.$(file.patterns.wscript)=1

