

if PLAT_WIN
	position.left=0
	position.top=0
if PLAT_GTK
	position.left=5
	position.top=22
position.width=576
position.height=740
split.vertical=1

line.numbers=0
margin.width=16
buffered.draw=1
use.palette=0

caret.period=500
view.whitespace=0
view.indentation.whitespace=1
view.indentation.guides=1
highlight.indentation.guides=1
edge.column=200
edge.mode=0
edge.colour=#C0DCC0
braces.check=1
braces.sloppy=1
selection.back=#DADADA

are.you.sure=1
default.file.ext=.cxx


tabsize=8
indent.size=8
use.tabs=1
indent.automatic=1
indent.opening=0
indent.closing=0

fold=1
fold.compact=1
fold.flags=16
fold.symbols=1

if PLAT_WIN
	find.command=fgrep -G -n $(find.what) $(find.files)
if PLAT_GTK
	find.command=grep --line-number "$(find.what)" $(find.files)
find.files=*.c *.cxx *.h

clear.before.execute=0

statusbar.number=4
statusbar.size=512
statusbar.text.1=\
li=$(LineNumber) co=$(ColumnNumber) $(OverType) ($(EOLMode)) $(FileAttr)
statusbar.text.2=\
$(BufferLength) chars in $(NbOfLines) lines. Sel: $(SelLength) chars.
statusbar.text.3=\
Now is: Date=$(CurrentDate) Time=$(CurrentTime)
statusbar.text.4=\
$(FileNameExt) : $(FileDate) ó $(FileTime) | $(FileAttr)

code.page=0

chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
chars.accented=äöåúüˇ¿‡¡·¬‚√„ƒ‰≈Â∆Ê«Á»Ë…È ÍÀÎÃÏÕÌŒÓœÔ–—Ò“Ú”Û‘Ù’ı÷ÿ¯Ÿ˘⁄˙€˚‹¸›˝ﬁ˛ﬂˆ

source.files=*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hxx;*.hpp;\
*.idl;*.odl;*.rc;*.rc2;*.dlg;*.def;\
*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;\
*.java;*.js;*.py;*.pl;*.rb;*.cgi;*.lua;*.conf;\
make*;*.mak;\
*.properties;*.html;*.xml;*.iface;*.bat;*.e

open.filter=\
All Source|$(source.files)|\
All Files (*.*)|*.*|\
$(filter.python)\
$(filter.cpp)\
$(filter.java)\
$(filter.web)\
$(filter.js)\
$(filter.vb)\
$(filter.properties)\
$(filter.text)\
$(filter.idl)\
$(filter.lua)\
$(filter.perl)\
$(filter.php)\
$(filter.ruby)\
$(filter.sql)\
$(filter.conf)\
$(filter.ave)\
$(filter.ada)\
$(filter.eiffel)\
$(filter.tcl)

if PLAT_WIN
	font.base=font:Verdana,size:10
	font.small=font:Verdana,size:8
	font.comment=font:Comic Sans MS,size:9
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.text=font:Times New Roman,size:11
	font.text.comment=font:Verdana,size:8
	font.embedded.base=font:Verdana,size:9
	font.embedded.comment=font:Comic Sans MS,size:8
	font.monospace=font:Courier New,size:10
	font.vbs=font:Lucida Sans Unicode,size:10
if PLAT_GTK
	font.base=font:lucidatypewriter,size:12
	font.small=font:lucidatypewriter,size:10
	font.comment=font:new century schoolbook,size:12
	font.code.comment.box=$(font.comment)
	font.code.comment.line=$(font.comment)
	font.code.comment.doc=$(font.comment)
	font.text=font:times,size:14
	font.text.comment=font:lucidatypewriter,size:10
	font.embedded.base=font:lucidatypewriter,size:12
	font.embedded.comment=font:lucidatypewriter,size:12
	font.monospace=font:courier,size:12
	font.vbs=font:new century schoolbook,size:12
font.js=$(font.comment)

colour.code.comment.box=fore:#007F00
colour.code.comment.line=fore:#007F00
colour.code.comment.doc=fore:#3F703F
colour.text.comment=fore:#0000FF,back:#D0F0D0
colour.other.comment=fore:#007F00
colour.embedded.comment=back:#E0EEFF
colour.embedded.js=back:#F0F0FF
colour.notused=back:#FF0000

colour.number=fore:#007F7F
colour.keyword=fore:#00007F
colour.string=fore:#7F007F
colour.char=fore:#7F007F
colour.operator=fore:#000000
colour.preproc=fore:#7F7F00
colour.error=fore:#FFFF00,back:#FF0000

style.*.32=$(font.base)
style.*.33=back:#C0C0C0,$(font.base)
style.*.34=fore:#0000FF,bold
style.*.35=fore:#FF0000,bold
style.*.36=
style.*.37=fore:#C0C0C0,back:#FFFFFF

if PLAT_WIN
	#print.colour.mode=1
	print.magnification=-1
	# Setup: left, right, top, bottom margins, in local units:
	# hundredths of millimeters or thousandths of inches
	print.margins=1500,1000,1000,1500
	# Header/footer:
	# && = &; &p = current page
	# &f = file name; &F = full path
	# &d = file date; &D = current date
	# &t = file time; &T = full time
	print.header.format=$(FileNameExt) ó Printed on $(CurrentDate), $(CurrentTime) ó Page $(CurrentPage)
	print.footer.format=$(FilePath) ó File date: $(FileDate) ó File time: $(FileTime)
	# Header/footer style
	print.header.style=font:Arial,size:12,bold
	print.footer.style=font:Arial Narrow,size:10,italics
	

import ada
import ave
import conf
import cpp
import eiffel
import html
import latex
import lisp
import lua
import others
import pascal
import perl
import python
import ruby
import sql
import tcl
import vb



filter.ada=Ada (.ads;.adb)|*.ads;*.adb|

file.patterns.ada=*.ads;*.adb

lexer.$(file.patterns.ada)=ada

keywordclass.ada=abort abstract accept access aliased all array at begin body case constant declare delay delta digits do else elsif end entry exception exit for function generic goto if in is limited loop new null of others out package pragma private procedure protected raise range record renames requeue return reverse select separate subtype tagged task terminate then type until use when while with 

keywords.$(file.patterns.ada)=$(keywordclass.ada)

style.ada.0=fore:#000000,$(font.ada)
style.ada.1=fore:#007F00,$(font.comment)
style.ada.2=fore:#007F7F
style.ada.3=fore:#00007F,bold
style.ada.4=fore:#7F007F,$(font.monospace)
style.ada.5=fore:#7F007F,$(font.monospace)
style.ada.6=fore:#00000F
style.ada.7=
style.ada.8=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled

statement.indent.$(file.patterns.ada)=5 begin declare else elsif exception for if is loop while
statement.end.$(file.patterns.ada)=10 ;
statement.lookback.$(file.patterns.ada)=20
block.start.$(file.patterns.ada)=10 then is
block.end.$(file.patterns.ada)=10 end

adagcc=gcc -c $(FileNameExt)

command.compile.*.ads=$(adagcc)
command.build.*.ads=gnatmake
command.go.*.ads=$(FileName)

command.compile.*.adb=$(adagcc)
command.build.*.adb=gnatmake
command.go.*.adb=$(FileName)

filter.ave=AVE (.ave)|*.ave|


file.patterns.ave=*.ave

file.patterns.braces=$(file.patterns.ave)

lexer.*.ave=ave
lexer.$(file.patterns.ave)=ave



keywords.$(file.patterns.ave)=$(keywordclass.ave)$(keywordfunc.ave) nil true false

word.chars.ave=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.ave)=$(word.chars.ave)

statement.indent.$(file.patterns.ave)=1 else for if while then
statement.end.$(file.patterns.ave)=1 end
statement.lookback.$(file.patterns.ave)=1 end



comment.ave='   
autocomplete.ave.ignorecase=1
calltip.ave.ignorecase=1
autocomplete.ave.start.characters=.
calltip.ave.word.characters=.$(word.chars.ave)


style.ave.32=font:Verdana,size:9
style.ave.0=fore:#808080,font:Verdana,size:9
style.ave.1=fore:#00AAAA,font:Comic Sans MS,size:10,back:#ffffff,italics
style.ave.2=fore:#007F7F,font:Verdana,size:9,bold
style.ave.3=fore:#000066,bold,font:Verdana,size:9
style.ave.5=fore:#0000FF,bold,font:Verdana,size:9
style.ave.4=fore:#7F7F00,bold,font:Verdana,size:9
style.ave.6=fore:#7F007F,font:Courier,size:9
style.ave.7=fore:#7F007F,bold,font:Verdana,size:9
style.ave.10=fore:#000055,font:Verdana,size:10,bold
style.ave.9=font:Verdana,size:9,fore:#222255
style.ave.8=fore:#000000,font:Verdana,size:9,back:#fefecc,eolfilled
braces.ave.style=10


command.help.$(file.patterns.ave)= $(CurrentWord)!C:\ESRI\AV_GIS30\ARCVIEW\HELP\ARCVIEW
command.help.subsystem.$(file.patterns.ave)=5




filter.conf=Apache Conf (.conf)|*.conf|
file.patterns.conf=*.conf
lexer.$(file.patterns.conf)=conf

keywords.$(file.patterns.conf)=\
accessconfig accessfilename action addalt \
addaltbyencoding addaltbytype addcharset \
adddefaultcharset adddescription \
addencoding addhandler addicon addiconbyencoding \
addiconbytype addlanguage addmodule addmoduleinfo \
addtype agentlog alias aliasmatch \
allow allowconnect allowoverride anonymous \
anonymous_authoritative anonymous_logemail anonymous_mustgiveemail \
anonymous_nouserid anonymous_verifyemail authauthoritative \
authdbauthoritative authdbgroupfile authdbmauthoritative \
authdbmgroupfile authdbmgroupfile authdbuserfile authdbmuserfile \
authdigestfile authgroupfile authname authtype \
authuserfile bindaddress browsermatch browsermatchnocase \
bs2000account cachedefaultexpire cachedirlength cachedirlevels \
cacheforcecompletion cachegcinterval cachelastmodifiedfactor cachemaxexpire \
cachenegotiateddocs cacheroot cachesize checkspelling \
clearmodulelist contentdigest cookieexpires cookielog \
cookielog cookietracking coredumpdirectory customlog \
defaulticon defaultlanguage defaulttype define \
deny directory directorymatch directoryindex \
documentroot errordocument errorlog example \
expiresactive expiresbytype expiresdefault extendedstatus \
fancyindexing files filesmatch forcetype \
group header headername hostnamelookups \
identitycheck ifdefine ifmodule imapbase \
imapdefault imapmenu include indexignore \
indexoptions keepalive keepalivetimeout languagepriority \
limit limitexcept limitrequestbody limitrequestfields \
limitrequestfieldsize limitrequestline listen listenbacklog \
loadfile loadmodule location locationmatch \
lockfile logformat loglevel maxclients \
maxkeepaliverequests maxrequestsperchild maxspareservers metadir \
metafiles metasuffix mimemagicfile minspareservers \
mmapfile namevirtualhost nocache options order \
passenv pidfile port proxyblock proxydomain \
proxypass proxypassreverse proxyreceivebuffersize proxyremote \
proxyrequests proxyvia qsc readmename \
redirect redirectmatch redirectpermanent redirecttemp \
refererignore refererlog removehandler require \
resourceconfig rewritebase rewritecond rewriteengine \
rewritelock rewritelog rewriteloglevel rewritemap \
rewriteoptions rewriterule rlimitcpu rlimitmem \
rlimitnproc satisfy scoreboardfile script \
scriptalias scriptaliasmatch scriptinterpretersource scriptlog \
scriptlogbuffer scriptloglength sendbuffersize \
serveradmin serveralias servername serverpath \
serverroot serversignature servertokens servertype \
setenv setenvif setenvifnocase sethandler \
singlelisten startservers threadsperchild timeout \
transferlog typesconfig unsetenv usecanonicalname \
user userdir virtualhost virtualdocumentroot \
virtualdocumentrootip virtualscriptalias virtualscriptaliasip \
xbithack from all
 

keywords2.$(file.patterns.conf)=\
on off standalone inetd \
force-response-1.0 downgrade-1.0 nokeepalive \
indexes includes followsymlinks none \
x-compress x-gzip

style.conf.0=fore:#808080,$(font.base)
style.conf.1=fore:#007F00,$(font.comment)
style.conf.2=fore:#007F7F
style.conf.9=fore:#00007F,bold
style.conf.4=fore:#000000,back:#FFE0FF
style.conf.5=fore:#000000,back:#FFE0FF
style.conf.6=fore:#7F007F,$(font.monospace)
style.conf.7=bold
style.conf.8=fore:#007F7F,bold
style.conf.3=fore:#000000,back:#A0FFA0

command.compile.$(file.patterns.conf)=httpd -t -f $(FilePath)
command.build.$(file.patterns.conf)=httpd -t -f $(FilePath)





file.patterns.cpp=*.c;*.cc;*.cpp;*.cxx;*.cs;*.h;*.hh;*.hpp;*.hxx;*.sma
file.patterns.test=*.pln;*.inc;*.t
file.patterns.cs=*.cs
file.patterns.rc=*.rc;*.rc2;*.dlg
file.patterns.idl=*.idl;*.odl
file.patterns.c.like=$(file.patterns.cpp);$(file.patterns.cs);$(file.patterns.idl);*.java

filter.cpp=C/C++ (c cc cpp cxx cs h hh hxx hpp dlg rc rc2 mak)|\
$(file.patterns.cpp);$(file.patterns.rc);*.mak;make*|
filter.java=Java (java)|*.java|
filter.js=JavaScript (js)|*.js|
filter.idl=IDL (idl odl)|$(file.patterns.idl)|
filter.test=SilkTest (pln inc t)|$(file.patterns.test)|

file.patterns.braces=$(file.patterns.cpp);$(file.patterns.idl);*.java;$(file.patterns.cs);$(file.patterns.test)

lexer.*.java=cpp
lexer.$(file.patterns.cpp)=cpp
lexer.$(file.patterns.rc)=cpp
lexer.$(file.patterns.idl)=cpp
lexer.$(file.patterns.cs)=cpp
lexer.*.js=cpp
lexer.$(file.patterns.test)=cpp

keywordclass.cpp=asm auto bool break case catch char class const const_cast continue \
default delete do double dynamic_cast else enum explicit export extern false float for \
friend goto if inline int long mutable namespace new operator private protected public \
register reinterpret_cast return short signed sizeof static static_cast struct switch \
template this throw true try typedef typeid typename union unsigned using \
virtual void volatile wchar_t while
keywords.$(file.patterns.cpp)=$(keywordclass.cpp)

word.chars.cxx=$(chars.alpha)$(chars.numeric)_#
word.characters.$(file.patterns.cpp)=$(word.chars.cxx)
comment.block.cpp=//~
comment.stream.start.cpp=/*
comment.stream.end.cpp=*/
comment.box.start.cpp=/*
comment.box.middle.cpp= *
comment.box.end.cpp= */
fold.comment=1

statement.indent.$(file.patterns.c.like)=5 case catch class default do else for if \
private protected public struct try union while
statement.end.$(file.patterns.c.like)=10 ;
statement.lookback.$(file.patterns.c.like)=20
block.start.$(file.patterns.c.like)=10 {
block.end.$(file.patterns.c.like)=10 }

preprocessor.symbol.$(file.patterns.cpp)=#
preprocessor.start.$(file.patterns.cpp)=if ifdef ifndef
preprocessor.middle.$(file.patterns.cpp)=else elif
preprocessor.end.$(file.patterns.cpp)=endif

keywordclass.cs=abstract as base bool break byte case catch char checked class \
const continue decimal default delegate do double else enum \
event explicit extern false finally fixed float for foreach goto if \
implicit in int interface internal is lock long namespace new null \
object operator out override params private protected public \
readonly ref return sbyte sealed short sizeof stackalloc static \
string struct switch this throw true try typeof uint ulong \
unchecked unsafe ushort using virtual void while
keywords.$(file.patterns.cs)=$(keywordclass.cs)
word.characters.$(file.patterns.cs)=$(word.chars.cxx)

keywordclass.rc=\
ACCELERATORS ALT AUTO3STATE AUTOCHECKBOX AUTORADIOBUTTON \
BEGIN BITMAP BLOCK BUTTON CAPTION CHARACTERISTICS CHECKBOX CLASS \
COMBOBOX CONTROL CTEXT CURSOR DEFPUSHBUTTON DIALOG DIALOGEX DISCARDABLE \
EDITTEXT END EXSTYLE FONT GROUPBOX ICON LANGUAGE LISTBOX LTEXT \
MENU MENUEX MENUITEM MESSAGETABLE POPUP \
PUSHBUTTON RADIOBUTTON RCDATA RTEXT SCROLLBAR SEPARATOR SHIFT STATE3 \
STRINGTABLE STYLE TEXTINCLUDE VALUE VERSION VERSIONINFO VIRTKEY
keywords.$(file.patterns.rc)=$(keywordclass.rc)

keywordclass.idl=\
aggregatable allocate appobject arrays async async_uuid \
auto_handle \
bindable boolean broadcast byte byte_count \
call_as callback char coclass code comm_status \
const context_handle context_handle_noserialize \
context_handle_serialize control cpp_quote custom \
decode default defaultbind defaultcollelem \
defaultvalue defaultvtable dispinterface displaybind dllname \
double dual \
enable_allocate encode endpoint entry enum error_status_t \
explicit_handle \
fault_status first_is float \
handle_t heap helpcontext helpfile helpstring \
helpstringcontext helpstringdll hidden hyper \
id idempotent ignore iid_as iid_is immediatebind implicit_handle \
import importlib in include in_line int __int64 __int3264 interface \
last_is lcid length_is library licensed local long \
max_is maybe message methods midl_pragma \
midl_user_allocate midl_user_free min_is module ms_union \
ncacn_at_dsp ncacn_dnet_nsp ncacn_http ncacn_ip_tcp \
ncacn_nb_ipx ncacn_nb_nb ncacn_nb_tcp ncacn_np \
ncacn_spx ncacn_vns_spp ncadg_ip_udp ncadg_ipx ncadg_mq \
ncalrpc nocode nonbrowsable noncreatable nonextensible notify \
object odl oleautomation optimize optional out out_of_line \
pipe pointer_default pragma properties propget propput propputref \
ptr public \
range readonly ref represent_as requestedit restricted retval \
shape short signed size_is small source strict_context_handle \
string struct switch switch_is switch_type \
transmit_as typedef \
uidefault union unique unsigned user_marshal usesgetlasterror uuid \
v1_enum vararg version void wchar_t wire_marshal

keywordclass.msidl=handle
keywordclass.xpidl=attribute native noscript scriptable shared wstring inout
keywords.$(file.patterns.idl)=$(keywordclass.idl) $(keywordclass.xpidl)

keywordclass.java=abstract boolean break byte case catch char class const \
continue default do double else extends final finally float for future \
generic goto if implements import inner instanceof int interface long \
native new null operator outer package private protected public rest \
return short static super switch synchronized this throw throws \
transient try var void volatile while
keywords.*.java=$(keywordclass.java)

keywordclass.javascript=abstract boolean break byte case catch char class \
const continue debugger default delete do double else enum export extends \
final finally float for function goto if implements import in instanceof \
int interface long native new package private protected public \
return short static super switch synchronized this throw throws \
transient try typeof var void volatile while with
keywords.*.js=$(keywordclass.javascript)


style.cpp.32=$(font.base)
style.cpp.0=fore:#808080
style.cpp.1=$(colour.code.comment.box),$(font.code.comment.box)
style.cpp.2=$(colour.code.comment.line),$(font.code.comment.line)
style.cpp.3=$(colour.code.comment.doc),$(font.code.comment.doc)
style.cpp.4=$(colour.number)
style.cpp.5=$(colour.keyword),bold
style.cpp.6=$(colour.string)
style.cpp.7=$(colour.char)
style.cpp.8=fore:#804080
style.cpp.9=$(colour.preproc)
style.cpp.10=$(colour.operator),bold
style.cpp.11=
style.cpp.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.cpp.13=fore:#007F00,$(font.monospace),back:#E0FFE0,eolfilled
style.cpp.14=fore:#3F7F3F,$(font.monospace),back:#E0F0FF,eolfilled
style.cpp.15=$(colour.code.comment.doc),$(font.code.comment.doc)
style.cpp.16=fore:#B00040
braces.cpp.style=10

cc=g++ -pedantic -Os -fno-exceptions -fvtable-thunks -c $(FileNameExt) -o $(FileName).o

command.compile.*.c=$(cc)
command.build.*.c=make
command.go.*.c=$(FileName)

command.compile.*.cc=$(cc)
command.build.*.cc=make
command.go.*.cc=$(FileName)

command.compile.*.cpp=$(cc)
command.build.*.cpp=make
command.go.*.cpp=$(FileName)

command.compile.*.cxx=$(cc)
command.build.*.cxx=make
command.go.*.cxx=$(FileName)

command.build.*.h=make

command.name.0.*.cxx=Indent
command.0.*.cxx=astyle -tapO $(FileNameExt)
command.is.filter.0.*.cxx=1

command.name.1.*.cxx=Lint
command.1.*.cxx=g++ -W -Wall -Wshadow -Wwrite-strings -Wold-style-cast \
	-Woverloaded-virtual  -pedantic -Os -fno-exceptions -fvtable-thunks -c $(FileNameExt)

command.name.2.*.cxx=Execute Selection
command.2.*.cxx=$(CurrentSelection)

if PLAT_WIN
	command.compile.*.rc=windres $(FileNameExt) $(FileName).o
	command.build.*.rc=make
	command.build.*.h=make
	command.help.$(file.patterns.cpp)=$(CurrentWord)!G:\Program Files\Microsoft Visual Studio\MSDN98\98VSa\1033\MSDNVS6A.COL
	command.help.subsystem.$(file.patterns.cpp)=4

if PLAT_GTK
	command.help.$(file.patterns.cpp)=man $(CurrentWord) | col -b
	
if PLAT_WIN
	command.build.*.cs=csc /t:winexe $(FileNameExt) /r:system.winforms.dll,system.dll,microsoft.win32.interop.dll,system.drawing.dll
	command.go.*.cs=$(FileName)
	command.go.subsystem.*.cs=1

command.compile.*.java=javac $(FileNameExt)
command.build.*.java=javac *.java
command.go.*.java=java $(FileName)


filter.eiffel=Eiffel (.e)|*.e|

file.patterns.eiffel=*.e

lexer.$(file.patterns.eiffel)=eiffel

keywordclass.eiffel=\
alias all and any as bit boolean \
check class character clone create creation current \
debug deferred div do double \
else elseif end ensure equal expanded export external \
false feature forget from frozen general \
if implies indexing infix inherit inspect integer invariant is \
language like local loop mod name nochange none not \
obsolete old once or platform pointer prefix precursor \
real redefine rename require rescue result retry \
select separate string strip then true undefine unique until \
variant void when xor

keywords.$(file.patterns.eiffel)=$(keywordclass.eiffel)

style.eiffel.0=fore:#808080
style.eiffelkw.0=$(style.eiffel.0)
style.eiffel.1=$(colour.code.comment.line),$(font.code.comment.line)
style.eiffelkw.1=$(style.eiffel.1)
style.eiffel.2=$(colour.number)
style.eiffelkw.2=$(style.eiffel.2)
style.eiffel.3=$(colour.keyword),bold
style.eiffelkw.3=$(style.eiffel.3)
style.eiffel.4=$(colour.string),$(font.monospace)
style.eiffelkw.4=$(style.eiffel.4)
style.eiffel.5=$(colour.char),$(font.monospace)
style.eiffelkw.5=$(style.eiffel.5)
style.eiffel.6=$(colour.operator),bold
style.eiffelkw.6=$(style.eiffel.6)
style.eiffel.7=
style.eiffelkw.7=$(style.eiffel.7)
style.eiffel.8=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.eiffelkw.8=$(style.eiffel.8)
braces.eiffel.style=6
braces.eiffelkw.style=$(braces.eiffel.style)

statement.indent.$(file.patterns.eiffel)=5 do else elsif rescue if is loop
statement.end.$(file.patterns.eiffel)=10 ;
statement.lookback.$(file.patterns.eiffel)=20
block.start.$(file.patterns.eiffel)=10 check debug deferred do from if inspect once
block.end.$(file.patterns.eiffel)=10 end

command.compile.*.e=compile $(FileName)
file.patterns.web=*.html;*.htm;*.asp;*.shtml
file.patterns.php=*.php3;*.phtml;*.php
file.patterns.html=*.html;*.htm;*.asp;*.shtml;*.php3;*.phtml;*.php;*.htt;*.cfm;*.tpl
file.patterns.xml=*.xml;*.xsl;*.svg;*.xul

filter.web=Web (html htm asp shtml css xml)|$(file.patterns.web);*.css;*.xml|
filter.php=PHP (php3 phtml inc)|$(file.patterns.php)|

lexer.$(file.patterns.html)=hypertext
lexer.$(file.patterns.xml)=xml


hypertext.elements=\
a abbr acronym address applet area b base basefont \
bdo big blockquote body br button caption center \
cite code col colgroup dd del dfn dir div dl dt em \
fieldset font form frame frameset h1 h2 h3 h4 h5 h6 \
head hr html i iframe img input ins isindex kbd label \
legend li link map menu meta noframes noscript \
object ol optgroup option p param pre q s samp \
script select small span strike strong style sub sup \
table tbody td textarea tfoot th thead title tr tt u ul \
var xml xmlns

hypertext.attributes=\
abbr accept-charset accept accesskey action align alink \
alt archive axis background bgcolor border \
cellpadding cellspacing char charoff charset checked cite \
class classid clear codebase codetype color cols colspan \
compact content coords \
data datafld dataformatas datapagesize datasrc datetime \
declare defer dir disabled enctype event \
face for frame frameborder \
headers height href hreflang hspace http-equiv \
id ismap label lang language leftmargin link longdesc \
marginwidth marginheight maxlength media method multiple \
name nohref noresize noshade nowrap \
object onblur onchange onclick ondblclick onfocus \
onkeydown onkeypress onkeyup onload onmousedown \
onmousemove onmouseover onmouseout onmouseup \
onreset onselect onsubmit onunload \
profile prompt readonly rel rev rows rowspan rules \
scheme scope selected shape size span src standby start style \
summary tabindex target text title topmargin type usemap \
valign value valuetype version vlink vspace width \
text password checkbox radio submit reset \
file hidden image

keywordclass.hypertext=\
$(hypertext.elements) $(hypertext.attributes) public !doctype

keywordclass.php=\
for break continue if else elseif endif do while return switch \
case function class new static global define \
__LINE__ __FILE__ PHP_VERSION PHP_OS TRUE FALSE E_ERROR \
E_WARNING E_PARSE E_NOTICE  \
int integer real double float string array object var \
abs acos ada_afetch ada_autocommit ada_close ada_commit ada_connect \
ada_exec ada_fetchrow ada_fieldname ada_fieldnum ada_fieldtype \
ada_freeresult ada_numfields ada_numrows ada_result ada_resultall \
ada_rollback addslashes apache_lookup_uri apache_note array_keys \
array_merge array_pop array_push array_shift array_slice array_splice \
array_unshift array_values array_walk array arsort asin asort \
aspell_check_raw aspell_check aspell_new aspell_suggest atan \
atan2 base_convert base64_decode base64_encode basename bcadd bccomp bcdiv bcmod bcmul bcpow bcscale bcsqrt \
bcsub bin2hex bindec ceil chdir checkdate checkdnsrr chgrp chmod chop chown \
chr chunk_split clearstatcache closedir closelog compact \
connection_aborted connection_status connection_timeout \
convert_cyr_string copy cos count cpdf_add_annotation cpdf_add_outline \
cpdf_arc cpdf_begin_text cpdf_circle cpdf_clip cpdf_close \
cpdf_closepath_fill_stroke cpdf_closepath_stroke cpdf_closepath \
cpdf_continue_text cpdf_curveto cpdf_end_text cpdf_endpath \
cpdf_fill_stroke cpdf_fill cpdf_finalize_page cpdf_finalize \
cpdf_import_jpeg cpdf_lineto cpdf_moveto cpdf_open cpdf_output_buffer \
cpdf_page_init cpdf_place_inline_image cpdf_rect cpdf_restore \
cpdf_rlineto cpdf_rmoveto cpdf_rotate cpdf_save_to_file cpdf_save \
cpdf_scale cpdf_set_char_spacing cpdf_set_creator cpdf_set_current_page \
cpdf_set_font cpdf_set_horiz_scaling cpdf_set_keywords \
cpdf_set_leading cpdf_set_page_animation cpdf_set_subject \
cpdf_set_text_matrix cpdf_set_text_pos cpdf_set_text_rendering \
cpdf_set_text_rise cpdf_set_title cpdf_set_word_spacing cpdf_setdash \
cpdf_setflat cpdf_setgray_fill cpdf_setgray_stroke cpdf_setgray \
cpdf_setlinecap cpdf_setlinejoin cpdf_setlinewidth cpdf_setmiterlimit \
cpdf_setrgbcolor_fill cpdf_setrgbcolor_stroke cpdf_setrgbcolor \
cpdf_show_xy cpdf_show cpdf_stringwidth cpdf_stroke cpdf_text \
cpdf_translate crypt current date dba_close dba_delete dba_exists \
dba_fetch dba_firstkey dba_insert dba_nextkey dba_open dba_optimize \
dba_popen dba_replace dba_sync dbase_add_record dbase_close \
dbase_create dbase_delete_record dbase_get_record dbase_numfields \
dbase_numrecords dbase_open dbase_pack dbase_replace_record dblist \
dbmclose dbmdelete dbmexists dbmfetch dbmfirstkey dbminsert dbmnextkey \
dbmopen dbmreplace debugger_off debugger_on decbin dechex decoct \
delete die dirname diskfreespace dl doubleval each easter_date \
easter_days echo empty end ereg_replace ereg eregi_replace eregi \
error_log error_reporting escapeshellcmd eval exec exit exp explode \
extension_loaded extract fclose fdf_close fdf_create fdf_get_file \
fdf_get_status fdf_get_value fdf_next_field_name fdf_open fdf_save \
fdf_set_ap fdf_set_file fdf_set_status fdf_set_value feof fgetc \
fgetcsv fgets fgetss file_exists file fileatime filectime filegroup \
fileinode filemtime fileowner fileperms filepro_fieldcount \
filepro_fieldname filepro_fieldtype filepro_fieldwidth \
filepro_retrieve filepro_rowcount filepro filesize filetype flock \
floor flush fopen fpassthru fputs fread frenchtojd fseek fsockopen \
ftell function_exists fwrite get_cfg_var get_current_user \
get_magic_quotes_gpc get_magic_quotes_runtime get_meta_tags \
getallheaders getdate getenv gethostbyaddr gethostbyname \
gethostbynamel getimagesize getlastmod getmxrr getmyinode getmypid \
getmyuid getrandmax getrusage gettimeofday gettype gmdate gmmktime \
gmstrftime gregoriantojd gzclose gzeof gzfile gzgetc gzgets gzgetss \
gzopen gzpassthru gzputs gzread gzrewind gzseek gztell gzwrite header \
hexdec htmlentities htmlspecialchars hw_children hw_childrenobj \
hw_close hw_connect hw_cp hw_deleteobject hw_docbyanchor \
hw_docbyanchorobj hw_documentattributes hw_documentbodytag \
hw_documentcontent hw_documentsetcontent hw_documentsize hw_edittext \
hw_error hw_errormsg hw_free_document hw_getanchors hw_getanchorsobj \
hw_getandlock hw_getchildcoll hw_getchildcollobj hw_getchilddoccoll \
hw_getchilddoccollobj hw_getobject hw_getobjectbyquery \
hw_getobjectbyquerycol hw_getobjectbyquerycoll hw_getobjectbyquerycollobj \
hw_getobjectbyqueryobj hw_getparents hw_getparentsobj hw_getremote \
hw_getremotechildren hw_getsrcbydestobj hw_gettext hw_getusername \
hw_identify hw_incollections hw_info hw_inscoll hw_insdoc \
hw_insertdocument hw_insertobject hw_modifyobject hw_mv \
hw_new_document hw_objrec2array hw_outputdocument hw_pconnect hw_pipedocument hw_root hw_unlock \
hw_who ibase_bind ibase_close ibase_connect ibase_execute \
ibase_fetch_row ibase_free_query ibase_free_result ibase_pconnect \
ibase_prepare ibase_query ibase_timefmt ifx_affected_rows \
ifx_blobinfile_mode ifx_byteasvarchar ifx_close ifx_connect \
ifx_copy_blob ifx_create_blob ifx_create_char ifx_do ifx_error \
ifx_errormsg ifx_fetch_row ifx_fieldproperties ifx_fieldtypes \
ifx_free_blob ifx_free_char ifx_free_result ifx_get_blob ifx_get_char \
ifx_getsqlca ifx_htmltbl_result ifx_nullformat ifx_num_fields \
ifx_num_rows ifx_pconnect ifx_prepare ifx_query ifx_textasvarchar \
ifx_update_blob ifx_update_char ifxus_close_slob ifxus_create_slob \
ifxus_free_slob ifxus_open_slob ifxus_read_slob ifxus_seek_slob \
ifxus_tell_slob ifxus_write_slob ignore_user_abort imagearc imagechar \
imagecharup imagecolorallocate imagecolorat imagecolorclosest \
imagecolorexact imagecolorresolve imagecolorset imagecolorsforindex \
imagecolorstotal imagecolortransparent imagecopyresized imagecreate \
imagecreatefromgif imagedashedline imagedestroy imagefill \
imagefilledpolygon imagefilledrectangle imagefilltoborder \
imagefontheight imagefontwidth imagegif imageinterlace imageline \
imageloadfont imagepolygon imagepsbbox imagepsencodefont \
imagepsfreefont imagepsloadfont imagepstext imagerectangle \
imagesetpixel imagestring imagestringup imagesx imagesy imagettfbbox \
imagettftext imap_8bit imap_append imap_base64 imap_binary imap_body imap_check imap_clearflag_full imap_close \
imap_createmailbox imap_delete imap_deletemailbox imap_expunge \
imap_fetchbody imap_fetchheader imap_fetchstructure imap_header \
imap_headers imap_listmailbox imap_listsubscribed imap_mail_copy \
imap_mail_move imap_mailboxmsginfo imap_num_msg imap_num_recent \
imap_open imap_ping imap_qprint imap_renamemailbox imap_reopen \
imap_rfc822_parse_adrlist imap_rfc822_write_address imap_scanmailbox imap_setflag_full imap_sort \
imap_subscribe imap_uid imap_undelete imap_unsubscribe implode \
in_array include intval iptcparse is_array is_dir is_double \
is_executable is_file is_float is_int is_integer is_link is_long \
is_object is_readable is_real is_string is_writeable isset jddayofweek \
jdmonthname jdtofrench jdtogregorian jdtojewish jdtojulian jewishtojd \
join juliantojd key ksort ldap_add ldap_bind ldap_close ldap_connect \
ldap_count_entries ldap_delete ldap_dn2ufn ldap_explode_dn ldap_first_attribute ldap_first_entry \
ldap_free_result ldap_get_attributes ldap_get_dn ldap_get_entries \
ldap_get_values ldap_list ldap_mod_add ldap_mod_del ldap_mod_replace \
ldap_modify ldap_next_attribute ldap_next_entry ldap_read ldap_search \
ldap_unbind leak link linkinfo list log log10 lstat ltrim mail max mcrypt_cbc mcrypt_cfb mcrypt_create_iv \
mcrypt_ecb mcrypt_get_block_size mcrypt_get_cipher_name \
mcrypt_get_key_size mcrypt_ofb md5 mhash_count mhash_get_block_size mhash_get_hash_name mhash microtime \
min mkdir mktime msql_affected_rows msql_close msql_connect \
msql_create_db msql_createdb msql_data_seek msql_dbname msql_drop_db \
msql_dropdb msql_error msql_fetch_array msql_fetch_field \
msql_fetch_object msql_fetch_row msql_field_seek msql_fieldflags \
msql_fieldlen msql_fieldname msql_fieldtable msql_fieldtype \
msql_free_result msql_freeresult msql_list_dbs msql_list_fields \
msql_list_tables msql_listdbs msql_listfields msql_listtables \
msql_num_fields msql_num_rows msql_numfields msql_numrows \
msql_pconnect msql_query msql_regcase msql_result msql_select_db \
msql_selectdb msql_tablename msql mssql_affected_rows mssql_close \
mssql_connect mssql_data_seek mssql_fetch_array mssql_fetch_field \
mssql_fetch_object mssql_fetch_row mssql_field_seek mssql_free_result \
mssql_num_fields mssql_num_rows mssql_pconnect mssql_query \
mssql_result mssql_select_db mt_getrandmax mt_rand mt_srand \
mysql_affected_rows mysql_close mysql_connect mysql_create_db \
mysql_data_seek mysql_db_query mysql_drop_db mysql_errno mysql_error \
mysql_fetch_array mysql_fetch_field mysql_fetch_lengths \
mysql_fetch_object mysql_fetch_row mysql_field_flags mysql_field_len \
mysql_field_name mysql_field_seek mysql_field_table mysql_field_type \
mysql_free_result mysql_insert_id mysql_list_dbs mysql_list_fields \
mysql_list_tables mysql_num_fields mysql_num_rows mysql_pconnect \
mysql_query mysql_result mysql_select_db mysql_tablename next \
nl2br number_format ocibindbyname ocicolumnisnull ocicolumnname \
ocicolumnsize ocicolumntype ocicommit ocidefinebyname ocierror \
ociexecute ocifetch ocifetchinto ocifetchstatement ocifreecursor \
ocifreestatement ociinternaldebug ocilogoff ocilogon ocinewcursor \
ocinewdescriptor ocinlogon ocinumcols ocinumrows ociparse ociplogon \
ociresult ocirollback ocirowcount ociserverversion ocistatementtype \
octdec odbc_autocommit odbc_binmode odbc_close_all odbc_close \
odbc_commit odbc_connect odbc_cursor odbc_do odbc_exec odbc_execute \
odbc_fetch_into odbc_fetch_row odbc_field_len odbc_field_name \
odbc_field_type odbc_free_result odbc_longreadlen odbc_num_fields \
odbc_num_rows odbc_pconnect odbc_prepare odbc_result_all odbc_result \
odbc_rollback odbc_setoption opendir openlog ora_bind ora_close \
ora_columnname ora_columntype ora_commit ora_commitoff ora_commiton \
ora_error ora_errorcode ora_exec ora_fetch ora_getcolumn ora_logoff \
ora_logon ora_open ora_parse ora_rollback ord pack parse_str parse_url \
passthru pclose pdf_add_annotation pdf_add_outline pdf_arc \
pdf_begin_page pdf_circle pdf_clip pdf_close_image pdf_close \
pdf_closepath_fill_stroke pdf_closepath_stroke pdf_closepath \
pdf_continue_text pdf_curveto pdf_end_page pdf_endpath \
pdf_execute_image pdf_fill_stroke pdf_fill pdf_get_info pdf_lineto \
pdf_moveto pdf_open_gif pdf_open_jpeg pdf_open_memory_image pdf_open \
pdf_place_image pdf_put_image pdf_rect pdf_restore pdf_rotate pdf_save \
pdf_scale pdf_set_char_spacing pdf_set_duration pdf_set_font \
pdf_set_horiz_scaling pdf_set_info_author pdf_set_info_creator \
pdf_set_info_keywords pdf_set_info_subject pdf_set_info_title \
pdf_set_leading pdf_set_text_matrix pdf_set_text_pos \
pdf_set_text_rendering pdf_set_text_rise pdf_set_transition \
pdf_set_word_spacing pdf_setdash pdf_setflat pdf_setgray_fill \
pdf_setgray_stroke pdf_setgray pdf_setlinecap pdf_setlinejoin \
pdf_setlinewidth pdf_setmiterlimit pdf_setrgbcolor_fill \
pdf_setrgbcolor_stroke pdf_setrgbcolor pdf_show_xy pdf_show \
pdf_stringwidth pdf_stroke pdf_translate pfsockopen pg_close \
pg_cmdtuples pg_connect pg_dbname pg_errormessage pg_exec \
pg_fetch_array pg_fetch_object pg_fetch_row pg_fieldisnull \
pg_fieldname pg_fieldnum pg_fieldprtlen pg_fieldsize pg_fieldtype \
pg_freeresult pg_getlastoid pg_host pg_loclose pg_locreate pg_loopen \
pg_loread pg_loreadall pg_lounlink pg_lowrite pg_numfields pg_numrows \
pg_options pg_pconnect pg_port pg_result pg_tty phpinfo phpversion \
pi popen pos pow preg_grep preg_match_all preg_match preg_quote \
preg_replace preg_split prev print printf putenv quoted_printable_decode \
quotemeta rand range rawurldecode rawurlencode readdir readfile \
readgzfile readlink register_shutdown_html rename require reset rewind \
rewinddir rmdir round rsort sem_acquire sem_get sem_release serialize \
session_decode session_destroy session_encode session_id \
session_is_registered session_module_name session_name \
session_register session_save_path session_start session_unregister \
set_file_buffer set_magic_quotes_runtime set_socket_blocking \
set_time_limit setcookie setlocale settype shm_attach shm_detach \
shm_get_var shm_put_var shm_remove_var shm_remove shuffle similar_text \
sin sizeof sleep snmp_get_quick_print snmp_set_quick_print snmpget \
snmpset snmpwalk snmpwalkoid solid_close solid_connect solid_exec \
solid_fetchrow solid_fieldname solid_fieldnum solid_freeresult \
solid_numfields solid_numrows solid_result sort soundex split sprintf \
sql_regcase sqrt srand stat str_replace strchr strcmp strcspn strftime \
strip_tags stripslashes strlen strpos strrchr strrev strrpos strspn \
strstr strtok strtolower strtoupper strtr strval substr \
sybase_affected_rows sybase_close sybase_connect sybase_data_seek \
sybase_fetch_array sybase_fetch_field sybase_fetch_object \
sybase_fetch_row sybase_field_seek sybase_free_result \
sybase_num_fields sybase_num_rows sybase_pconnect sybase_query \
sybase_result sybase_select_db symlink syslog system tan tempnam time \
touch trim uasort ucfirst ucwords uksort umask uniqid unlink unpack \
unserialize unset urldecode urlencode usleep usort \
utf8_decode utf8_encode virtual vm_addalias vm_adduser vm_delalias vm_deluser \
vm_passwd wddx_add_vars wddx_deserialize wddx_packet_end \
wddx_packet_start wddx_serialize_value wddx_serialize_vars \
xml_error_string xml_get_current_byte_index xml_get_current_column_number \
xml_get_current_line_number xml_get_error_code xml_parse \
xml_parser_create xml_parser_free xml_parser_get_option \
xml_parser_set_option xml_set_character_data_handler \
xml_set_default_handler xml_set_element_handler xml_set_external_entity_ref_handler \
xml_set_notation_decl_handler xml_set_processing_instruction_handler \
xml_set_unparsed_entity_decl_handler yp_err_string yp_errno yp_first \
yp_get_default_domain yp_master yp_match yp_next yp_order

keywords.$(file.patterns.html)=$(keywordclass.hypertext)
keywords2.$(file.patterns.html)=$(keywordclass.javascript)
keywords3.$(file.patterns.html)=$(keywordclass.vb)
keywords4.$(file.patterns.html)=$(keywordclass.python)
keywords5.$(file.patterns.html)=$(keywordclass.php)

word.characters.$(file.patterns.html)=$(chars.alpha)$(chars.numeric)_-
comment.stream.start.hypertext=<!--
comment.stream.end.hypertext=-->

keywords.$(file.patterns.xml)=

word.characters.$(file.patterns.xml)=$(chars.alpha)$(chars.numeric)_-

keywords.*.css=\
background background-attachment background-color background-image background-position background-repeat \
border-color border-bottom border-bottom-width border-left border-left-width \
border border-right-width border-right border-style border-top border-top-width border-width \
clear clip color cursor display float \
font font-family font-size font-style font-variant font-weight \
height left letter-spacing line-height \
list-style list-style-image list-style-position list-style-type \
margin margin-bottom margin-left margin-right margin-top overflow \
padding padding-bottom padding-left padding-right padding-top position \
text-align text-decoration text-indent text-transform top \
vertical-align visibility width white-space word-spacing z-index

word.characters.*.css=$(chars.alpha)$(chars.numeric)_-


style.hypertext.0=fore:#000000,$(font.text)
style.hypertext.1=fore:#000080
style.hypertext.2=fore:#FF0000
style.hypertext.3=fore:#008080
style.hypertext.4=fore:#FF0000
style.hypertext.5=$(colour.number)
style.hypertext.6=$(colour.string)
style.hypertext.7=$(colour.string)
style.hypertext.8=fore:#800080
style.hypertext.9=fore:#808000,$(font.text.comment)
style.hypertext.10=fore:#800080,$(font.text)
style.hypertext.11=fore:#000080
style.hypertext.12=fore:#0000FF
style.hypertext.13=fore:#0000FF
style.hypertext.14=fore:#000080
style.hypertext.15=back:#FFFF00
style.hypertext.16=back:#FFDF00
style.hypertext.17=back:#FFDF00
style.hypertext.18=fore:#0000FF,back:#FFEFBF
style.hypertext.19=fore:#FF00FF,back:#FFEFFF
style.hypertext.21=fore:#000080,back:#FFDFCC
style.hypertext.34=fore:#0000FF,notbold,$(font.text)
style.hypertext.35=fore:#FF0000,notbold,$(font.text)

fontcolour.js=$(colour.embedded.js),$(font.js)
style.hypertext.40=fore:#7F7F00
style.hypertext.41=fore:#000000,bold,$(fontcolour.js),eolfilled
style.hypertext.42=$(colour.code.comment.box),$(fontcolour.js),eolfilled
style.hypertext.43=$(colour.code.comment.line),$(fontcolour.js)
style.hypertext.44=$(colour.code.comment.doc),bold,$(fontcolour.js),eolfilled
style.hypertext.45=$(colour.number),$(fontcolour.js)
style.hypertext.46=fore:#000000,$(fontcolour.js)
style.hypertext.47=$(colour.keyword),bold,$(fontcolour.js)
style.hypertext.48=$(colour.string),$(fontcolour.js)
style.hypertext.49=$(colour.string),$(fontcolour.js)
style.hypertext.50=$(colour.operator),bold,$(fontcolour.js)
style.hypertext.51=back:#BFBBB0,eolfilled
style.hypertext.52=back:#FFBBB0

style.hypertext.55=fore:#7F7F00
style.hypertext.56=fore:#000000,bold,$(font.js),back:#DFDF7F,eolfilled
style.hypertext.57=fore:#007F00,$(font.js),back:#DFDF7F,eolfilled
style.hypertext.58=fore:#007F00,$(font.js),back:#DFDF7F
style.hypertext.59=fore:#7F7F7F,bold,$(font.js),back:#DFDF7F,eolfilled
style.hypertext.60=fore:#007F7F,$(font.js),back:#DFDF7F
style.hypertext.61=fore:#000000,$(font.js),back:#DFDF7F
style.hypertext.62=fore:#00007F,bold,$(font.js),back:#DFDF7F
style.hypertext.63=fore:#7F007F,$(font.js),back:#DFDF7F
style.hypertext.64=fore:#7F007F,$(font.js),back:#DFDF7F
style.hypertext.65=fore:#000000,bold,$(font.js),back:#DFDF7F
style.hypertext.66=back:#BFBBB0,eolfilled
style.hypertext.67=back:#FFBBB0

style.hypertext.70=
style.hypertext.71=$(font.vbs),back:#EFEFFF,fore:#000000,eolfilled
style.hypertext.72=$(font.comment),back:#EFEFFF,fore:#008000,eolfilled
style.hypertext.73=$(font.vbs),back:#EFEFFF,fore:#008080,eolfilled
style.hypertext.74=$(font.vbs),back:#EFEFFF,fore:#000080,bold,eolfilled
style.hypertext.75=$(font.vbs),back:#EFEFFF,fore:#800080,eolfilled
style.hypertext.76=$(font.vbs),back:#EFEFFF,fore:#000080,eolfilled
style.hypertext.77=$(font.vbs),back:#7F7FFF,fore:#000080,eolfilled

style.hypertext.80=
style.hypertext.81=$(font.vbs),back:#CFCFEF,fore:#000000,eolfilled
style.hypertext.82=$(font.comment),back:#CFCFEF,fore:#008000,eolfilled
style.hypertext.83=$(font.vbs),back:#CFCFEF,fore:#008080,eolfilled
style.hypertext.84=$(font.vbs),back:#CFCFEF,fore:#000080,bold,eolfilled
style.hypertext.85=$(font.vbs),back:#CFCFEF,fore:#800080,eolfilled
style.hypertext.86=$(font.vbs),back:#CFCFEF,fore:#000080,eolfilled
style.hypertext.87=$(font.vbs),back:#7F7FBF,fore:#000080,eolfilled

style.hypertext.90=fore:#808080
style.hypertext.91=fore:#808080,back:#EFFFEF,eolfilled
style.hypertext.92=fore:#007F00,$(font.comment),back:#EFFFEF,eolfilled
style.hypertext.93=fore:#007F7F,back:#EFFFEF,eolfilled
style.hypertext.94=fore:#7F007F,$(font.monospace),back:#EFFFEF,eolfilled
style.hypertext.95=fore:#7F007F,$(font.monospace),back:#EFFFEF,eolfilled
style.hypertext.96=fore:#00007F,bold,back:#EFFFEF,eolfilled
style.hypertext.97=fore:#7F0000,back:#EFFFEF,eolfilled
style.hypertext.98=fore:#7F0000,back:#EFFFEF,eolfilled
style.hypertext.99=fore:#0000FF,bold,back:#EFFFEF,eolfilled
style.hypertext.100=fore:#007F7F,bold,back:#EFFFEF,eolfilled
style.hypertext.101=bold,back:#EFFFEF,eolfilled
style.hypertext.102=back:#EFFFEF,eolfilled

style.hypertext.105=fore:#808080
style.hypertext.106=fore:#808080,back:#CFEFCF,eolfilled
style.hypertext.107=fore:#007F00,$(font.comment),back:#CFEFCF,eolfilled
style.hypertext.108=fore:#007F7F,back:#CFEFCF,eolfilled
style.hypertext.109=fore:#7F007F,$(font.monospace),back:#CFEFCF,eolfilled
style.hypertext.110=fore:#7F007F,$(font.monospace),back:#CFEFCF,eolfilled
style.hypertext.111=fore:#00007F,bold,back:#CFEFCF,eolfilled
style.hypertext.112=fore:#7F0000,back:#CFEFCF,eolfilled
style.hypertext.113=fore:#7F0000,back:#CFEFCF,eolfilled
style.hypertext.114=fore:#0000FF,bold,back:#CFEFCF,eolfilled
style.hypertext.115=fore:#007F7F,bold,back:#CFEFCF,eolfilled
style.hypertext.116=bold,back:#CFEFCF,eolfilled
style.hypertext.117=back:#CFEFCF,eolfilled

style.hypertext.118=fore:#000033,back:#FFF8F8,eolfilled
style.hypertext.119=fore:#007F00,back:#FFF8F8
style.hypertext.120=fore:#009F00,back:#FFF8F8
style.hypertext.121=fore:#7F007F,italics,back:#FFF8F8
style.hypertext.122=fore:#CC9900,back:#FFF8F8
style.hypertext.123=fore:#00007F,italics,back:#FFF8F8
style.hypertext.124=fore:#999999,$(font.comment),back:#FFF8F8
style.hypertext.125=fore:#666666,italics,$(font.comment),back:#FFF8F8
style.hypertext.126=fore:#00007F,italics,back:#FFF8F8
style.hypertext.127=fore:#000000,back:#FFF8F8


style.xml.0=fore:#000000,$(font.text)
style.xml.1=fore:#000080
style.xml.2=fore:#000080
style.xml.3=fore:#008080
style.xml.4=fore:#008080
style.xml.5=$(colour.number)
style.xml.6=$(colour.string)
style.xml.7=$(colour.string)
style.xml.8=fore:#800080
style.xml.9=fore:#808000
style.xml.10=fore:#800080,$(font.text)
style.xml.11=fore:#000080
style.xml.12=fore:#800080,bold
style.xml.13=fore:#800080,bold
style.xml.17=fore:#800000,back:#FFF0F0,$(font.text),eolfilled
style.xml.18=fore:#800000
style.xml.19=fore:#608060
braces.xml.style=31

if PLAT_WIN
	command.go.$(file.patterns.web)="file://$(FilePath)"
	command.go.subsystem.$(file.patterns.web)=2
	command.go.$(file.patterns.php)=php -f $(FileNameExt)

file.patterns.latex=*.tex;*.sty

lexer.$(file.patterns.latex)=latex

style.latex.0=fore:#000000
style.latex.1=fore:#AA0000,bold
style.latex.2=fore:#880088,bold
style.latex.3=fore:#0000FF
style.latex.4=fore:#00AA00

command.compile.*.tex=latex $(FileNameExt)
command.build.*.tex=dvips -f $(FileName).dvi > $(FileName).ps
command.go.*.tex=dvips $(FileName).dvi

command.name.0.*.tex=View
command.0.*.tex=xdvi $(FileName).dvi
command.name.1.*.tex=View PS
command.1.*.tex=gv $(FileName).ps

file.patterns.lisp=*.lsp;*.lisp

filter.lisp=LISP (lsp lisp)|$(file.patterns.lisp)|

file.patterns.braces=$(file.patterns.lisp)

lexer.$(file.patterns.lisp)=lisp

keywords.$(file.patterns.lisp)= not defun + - * / = < > <= >= princ\
eval apply funcall quote identity function complement backquote lambda set setq setf\
defun defmacro gensym make symbol intern symbol name symbol value symbol plist get\
getf putprop remprop hash make array aref car cdr caar cadr cdar cddr caaar caadr cadar\
caddr cdaar cdadr cddar cdddr caaaar caaadr caadar caaddr cadaar cadadr caddar cadddr\
cdaaar cdaadr cdadar cdaddr cddaar cddadr cdddar cddddr cons list append reverse last nth\
nthcdr member assoc subst sublis nsubst  nsublis remove length list length\
mapc mapcar mapl maplist mapcan mapcon rplaca rplacd nconc delete atom symbolp numberp\
boundp null listp consp minusp zerop plusp evenp oddp eq eql equal cond case and or let l if prog\
prog1 prog2 progn go return do dolist dotimes catch throw error cerror break\
continue errset baktrace evalhook truncate float rem min max abs sin cos tan expt exp sqrt\
random logand logior logxor lognot bignums logeqv lognand lognor\
logorc2 logtest logbitp logcount integer length nil

word.chars.lisp=$(chars.alpha)$(chars.numeric)_-<>.#+@$%^&
word.characters.$(file.patterns.lisp)=$(word.chars.lisp)


comment.block.lisp=;
comment.box.start.lisp=;;
comment.box.middle.lisp=;;
comment.box.end.lisp=;;





style.lisp.32=$(font.base)
style.lisp.0=fore:#808080
style.lisp.1=$(colour.code.comment.box),$(font.code.comment.box)
style.lisp.2=$(colour.number)
style.lisp.3=$(colour.keyword),bold
style.lisp.6=$(colour.string)
style.lisp.10=$(colour.operator),bold
style.lisp.9=
style.lisp.8=fore:#000000,font:Verdana,size:9,back:#fefecc,eolfilled
style.lisp.34=fore:#0000FF,bold
style.lisp.35=fore:#FF0000,bold
braces.lisp.style=10

file.patterns.lua=*.lua

filter.lua=Lua (lua)|$(file.patterns.lua)|

lexer.$(file.patterns.lua)=lua

keywordclass.lua=and break do else elseif end for function if \
in local nil not or repeat return then until while
keywords.$(file.patterns.lua)=$(keywordclass.lua)
comment.block.lua=--~


style.lua.32=$(font.code.base),fore:#000000
style.lua.0=fore:#FF0000
style.lua.1=$(colour.notused),$(font.notused)
style.lua.2=$(colour.code.comment.line),$(font.code.comment.line)
style.lua.3=$(colour.notused),$(font.notused)
style.lua.4=$(colour.number)
style.lua.5=$(colour.keyword),bold
style.lua.6=$(colour.string),$(font.monospace)
style.lua.7=$(colour.char),$(font.monospace)
style.lua.8=$(colour.string),$(font.monospace)
style.lua.9=$(colour.preproc)
style.lua.10=$(colour.operator),bold
style.lua.11=
style.lua.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
braces.lua.style=10

command.compile.*.lua=luac -o $(FileName).luc $(FileNameExt)
command.go.*.lua=lua $(FileNameExt)


file.patterns.props=*.properties;*.ini;*.inf;*.reg;*.url;*.cfg;*.cnf;*.aut
file.patterns.text=*.txt;*.log;*.lst;*.doc;*.diz;*.nfo
file.patterns.batch=*.bat;*.cmd;*.nt
file.patterns.diff=*.diff;*.patch
file.patterns.make=makefile;makefile_vc;makefile_bor;*.mak

filter.properties=Properties (ini inf reg url cfg cnf)|$(file.patterns.props)|
filter.text=Text (txt log lst doc diz nfo)|$(file.patterns.text)|
filter.batch=Batch (bat cmd nt)|$(file.patterns.batch)|
filter.diff=Difference (diff patch)|$(file.patterns.diff)|

lexer.$(file.patterns.props)=props
lexer.$(file.patterns.batch)=batch
lexer.*.err=errorlist
lexer.$(file.patterns.make)=makefile
lexer.*.iface=makefile
lexer.$(file.patterns.diff)=diff

word.characters.$(file.patterns.text)=$(chars.alpha)$(chars.numeric)$(chars.accented)-'

colour.other.operator=fore:#B06000


style.props.0=
style.props.1=fore:#007F7F,$(font.comment)
style.props.2=$(colour.string),back:#E0F0F0,eolfilled
style.props.3=$(colour.other.operator)
style.props.4=$(colour.preproc)
style.props.34=fore:#0000FF,notbold
style.props.35=fore:#FF0000,notbold
comment.block.props=#~
preprocessor.symbol.$(file.patterns.make)=!
preprocessor.start.$(file.patterns.make)=IF IFDEF IFNDEF
preprocessor.middle.$(file.patterns.make)=ELSE ELSEIF ELSEIFDEF ELSEIFNDEF
preprocessor.end.$(file.patterns.make)=ENDIF


keywordclass.batch=rem set if exist errorlevel for in do \
break call chcp cd chdir choice cls country ctty date del erase dir echo \
exit goto loadfix loadhigh mkdir md move path pause prompt rename ren \
rmdir rd shift time type ver verify vol \
com con lpt nul
keywords.$(file.patterns.batch)=$(keywordclass.batch)

style.batch.0=fore:#000000
style.batch.1=fore:#007F00,$(font.comment)
style.batch.2=$(colour.keyword)
style.batch.3=$(colour.string),back:#606060,fore:#FFFF00,eolfilled
style.batch.4=$(colour.preproc)
style.batch.5=$(colour.keyword),$(font.monospace),bold
style.batch.6=back:#FFFFE0
style.batch.7=$(colour.other.operator)

comment.block.batch=REM ~


style.makefile.0=fore:#000000
style.makefile.1=$(colour.other.comment),$(font.code.comment.box)
style.makefile.2=$(colour.preproc)
style.makefile.3=fore:#000080
style.makefile.4=$(colour.other.operator)
style.makefile.5=fore:#A00000
style.makefile.9=$(colour.error),eolfilled
style.makefile.34=fore:#0000FF,notbold
style.makefile.35=fore:#FF0000,notbold

comment.block.makefile=#~


style.errorlist.32=fore:#B06000,$(font.small)
style.errorlist.0=fore:#000000
style.errorlist.1=fore:#FF0000
style.errorlist.2=fore:#800080
style.errorlist.3=fore:#808000
style.errorlist.4=fore:#0000FF
style.errorlist.5=fore:#B06000
style.errorlist.6=fore:#FF0000
style.errorlist.7=fore:#FF0000
style.errorlist.8=fore:#FF0000
style.errorlist.10=fore:#007F00
style.errorlist.11=fore:#00007F
style.errorlist.12=fore:#007F7F
style.errorlist.13=fore:#7F0000
style.errorlist.33=$(font.small)


style.diff.0=fore:#000000
style.diff.1=fore:#007F00
style.diff.2=fore:#7F7F00
style.diff.3=fore:#7F0000
style.diff.4=fore:#7F007F
style.diff.5=fore:#007F7F
style.diff.6=fore:#00007F

command.build.makefile=make
command.build.*.mak=make

if PLAT_WIN
	command.go.*.bat=$(FileNameExt)
	command.name.0.*.bat=Execute Selection
	command.0.*.bat=$(CurrentSelection)
	command.name.1.*.mak=nmake
	command.1.*.mak=nmake -f $(FileNameExt)

filter.ruby=Ruby (.rb)|*.rb|

lexer.*.rb=ruby

file.patterns.rb=*.rb

keywordclass.ruby=__FILE__ and def end in or self unless __LINE__ begin \
defined? ensure module redo super until BEGIN break do false next rescue \
then when END case else for nil retry true while alias class elsif if \
not return undef yield
keywords.$(file.patterns.rb)=$(keywordclass.ruby)

statement.indent.*.rb=
statement.end*.rb=
statement.lookback.*.rb=1
block.start.*.rb=10

comment.block.ruby=#~

style.ruby.0=fore:#808080
style.ruby.1=fore:#007F00,$(font.comment)
style.ruby.2=fore:#007F7F
style.ruby.3=fore:#7F007F,$(font.monospace)
style.ruby.4=fore:#7F007F,$(font.monospace)
style.ruby.5=fore:#00007F,bold
style.ruby.7=fore:#7F0000
style.ruby.8=fore:#0000FF,bold
style.ruby.9=fore:#007F7F,bold
style.ruby.10=bold
style.ruby.11=fore:#7F7F7F
style.ruby.12=fore:#7F7F7F
style.ruby.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.ruby.34=fore:#0000FF,bold
style.ruby.35=fore:#FF0000,bold
braces.ruby.style=10

if PLAT_WIN
	command.go.*.rb=ruby $(FileNameExt)
	command.go.subsystem.*.rb=1
	
if PLAT_GTK
	command.go.*.rb=ruby $(FileNameExt)

filter.pascal=Pascal (.pas;.inc)|*.pas;*.inc|

file.patterns.pascal=*.pas;*.inc
lexer.$(file.patterns.pascal)=pascal

keywordclass.pascal=program const type var begin end array set record string if then else \
while for to downto do with repeat until case of goto exit label procedure \
function nil file and or not xor div mod unit uses implementation interface \
external asm inline object constructor destructor virtual far assembler near \
inherited

keywords.$(file.patterns.pascal)=$(keywordclass.pascal)

style.pascal.0=fore:#000000,$(font.pascal)
style.pascal.1=fore:#007F00,$(font.comment)
style.pascal.2=fore:#007F00,$(font.comment)
style.pascal.3=fore:#7F7F7F
style.pascal.4=fore:#007F7F

style.pascal.5=fore:#00007F,bold
style.pascal.6=fore:#7F007F,italics,$(font.comment)
style.pascal.7=fore:#7F007F,italics,$(font.text)
style.pascal.8=fore:#007F7F
style.pascal.9=fore:#7F7F00
style.pascal.10=fore:#000000
style.pascal.34=fore:#0000FF,notbold
style.pascal.35=fore:#FF0000,notbold
braces.pascal.style=10

statement.indent.$(file.patterns.pascal)=5 case catch class default do else for then \
private protected public struct try union while type
statement.end.$(file.patterns.pascal)=10 ;
statement.lookback.$(file.patterns.pascal)=20
block.start.$(file.patterns.pascal)=10 begin
block.end.$(file.patterns.pascal)=10 end

pc=C:\Vp21\Bin.w32\Vpc.exe -VC:\Vp21\Bin.w32\Vp.vpo "$(FilePath)"

command.compile.*.pas=$(pc)

command.go.*.pas="c:\vp21\out.w32\$(FileName).exe"
command.go.subsystem.*.pas=2

command.build.*.pas=$(pc)
command.build.subsystem.*.pas=1


file.patterns.perl=*.pl;*.pm;*.cgi;*.pod
file.patterns.bash=*.sh;*.bsh

filter.perl=Perl (pl pm)|$(file.patterns.perl)|

lexer.$(file.patterns.perl)=perl
lexer.$(file.patterns.bash)=perl

keywords.$(file.patterns.perl)=\
NULL __FILE__ __LINE__ __PACKAGE__ __DATA__ __END__ AUTOLOAD \
BEGIN CORE DESTROY END EQ GE GT INIT LE LT NE CHECK abs accept \
alarm and atan2 bind binmode bless caller chdir chmod chomp chop \
chown chr chroot close closedir cmp connect continue cos crypt \
dbmclose dbmopen defined delete die do dump each else elsif endgrent \
endhostent endnetent endprotoent endpwent endservent eof eq eval \
exec exists exit exp fcntl fileno flock for foreach fork format \
formline ge getc getgrent getgrgid getgrnam gethostbyaddr gethostbyname \
gethostent getlogin getnetbyaddr getnetbyname getnetent getpeername \
getpgrp getppid getpriority getprotobyname getprotobynumber getprotoent \
getpwent getpwnam getpwuid getservbyname getservbyport getservent \
getsockname getsockopt glob gmtime goto grep gt hex if index \
int ioctl join keys kill last lc lcfirst le length link listen \
local localtime lock log lstat lt m map mkdir msgctl msgget msgrcv \
msgsnd my ne next no not oct open opendir or ord our pack package \
pipe pop pos print printf prototype push q qq qr quotemeta qu \
qw qx rand read readdir readline readlink readpipe recv redo \
ref rename require reset return reverse rewinddir rindex rmdir \
s scalar seek seekdir select semctl semget semop send setgrent \
sethostent setnetent setpgrp setpriority setprotoent setpwent \
setservent setsockopt shift shmctl shmget shmread shmwrite shutdown \
sin sleep socket socketpair sort splice split sprintf sqrt srand \
stat study sub substr symlink syscall sysopen sysread sysseek \
system syswrite tell telldir tie tied time times tr truncate \
uc ucfirst umask undef unless unlink unpack unshift untie until \
use utime values vec wait waitpid wantarray warn while write \
x xor y

keywords.$(file.patterns.bash)=alias break case continue do \
done elif else esac exit export fi for if in return set then unalias \
unset while /C2 halt ifconfig init initlog insmod linuxconf lsmod \
modprobe reboot rmmod route shutdown traceroute /C3 awk \
basename cat cp echo egrep fgrep gawk grep gzip kill killall \
less md mkdir mv nice pidof ps rd read rm rmdir sed sleep test \
touch ulimit uname usleep zcat zless

word.characters.$(file.patterns.perl)=$(chars.alpha)$(chars.numeric)_$@%&

comment.block.perl=#~

colour.perl.heredoc=$(colour.embedded.comment)

style.perl.32=
style.perl.0=fore:#808080,$(font.base)
style.perl.1=$(colour.error)
style.perl.2=$(colour.code.comment.box),$(font.code.comment.box)
style.perl.3=fore:#004000,back:#E0FFE0,$(font.text),eolfilled
style.perl.4=$(colour.number)
style.perl.5=$(colour.keyword),bold
style.perl.6=$(colour.string),$(font.monospace)
style.perl.7=$(colour.character),$(font.monospace)
style.perl.8=$(colour.notused),$(font.notused)
style.perl.9=$(colour.notused),$(font.notused)
style.perl.10=$(colour.operator),bold
style.perl.11=fore:#000000
style.perl.12=fore:#000000,back:#FFE0E0
style.perl.13=fore:#000000,back:#FFFFE0
style.perl.14=fore:#000000,back:#FFE0FF
style.perl.15=fore:#000000,back:#E0E0E0
style.perl.17=fore:#000000,back:#A0FFA0
style.perl.18=fore:#000000,back:#F0E080
style.perl.19=fore:#FFFF00,back:#8080A0
style.perl.20=fore:#FFFF00,back:#A08080
style.perl.21=fore:#600000,back:#FFF0D8,eolfilled
style.perl.22=fore:#000000,back:#DDD0DD
style.perl.23=fore:#7F007F,back:#DDD0DD,eolfilled,notbold
style.perl.24=fore:#7F007F,back:#DDD0DD,eolfilled,bold
style.perl.25=fore:#7F007F,back:#DDD0DD,eolfilled,italics
style.perl.26=fore:#7F007F,$(font.monospace),notbold
style.perl.27=$(style.perl.6)
style.perl.28=$(style.perl.20)
style.perl.29=$(style.perl.17)
style.perl.30=$(style.perl.13)
braces.perl.style=10

command.go.$(file.patterns.perl)=perl -w $(FileNameExt)

command.compile.$(file.patterns.perl)=perl -c -w $(FileNameExt)
command.name.0.$(file.patterns.perl)=Lint
command.0.$(file.patterns.perl)=perl -MO=Lint,all $(FileNameExt)


filter.python=Python (.py)|*.py|

lexer.*.py=python

keywordclass.python=and assert break class continue def del elif else except \
exec finally for from global if import in is lambda None not or pass print \
raise return try while
keywords.*.py=$(keywordclass.python)

statement.indent.*.py=
statement.end.*.py=
statement.lookback.*.py=1
block.start.*.py=10 :
block.end.*.py=
tab.timmy.whinge.level=1


comment.block.python=#~

style.python.0=fore:#808080
style.python.1=fore:#007F00,$(font.comment)
style.python.2=fore:#007F7F
style.python.3=fore:#7F007F,$(font.monospace)
style.python.4=fore:#7F007F,$(font.monospace)
style.python.5=fore:#00007F,bold
style.python.6=fore:#7F0000
style.python.7=fore:#7F0000
style.python.8=fore:#0000FF,bold
style.python.9=fore:#007F7F,bold
style.python.10=bold
style.python.11=
style.python.12=fore:#7F7F7F
style.python.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.python.34=fore:#0000FF,bold
style.python.35=fore:#FF0000,bold
braces.python.style=10

if PLAT_WIN
	command.go.*.py=pythonw -u $(FileNameExt)
	command.go.subsystem.*.py=1
	
if PLAT_GTK
	command.go.*.py=python -u $(FileNameExt)

filter.sql=SQL (.sql)|*.sql|

file.patterns.sql=*.sql
file.patterns.plsql=*.spec;*.body;*.sps;*.spb;*.sf;*.sp

lexer.$(file.patterns.sql)=sql
lexer.$(file.patterns.plsql)=sql

style.sql.0=fore:#808080
style.sql.1=fore:#007F00,$(font.comment)
style.sql.2=fore:#007F00,$(font.comment)
style.sql.3=fore:#7F7F7F
style.sql.4=fore:#007F7F
style.sql.5=fore:#00007F,bold
style.sql.6=fore:#7F007F,$(font.monospace)
style.sql.7=fore:#7F007F,$(font.monospace)
style.sql.8=fore:#007F7F
style.sql.9=fore:#7F7F00
style.sql.10=bold
style.sql.11=
style.sql.12=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
braces.sql.style=10

keywords.$(file.patterns.sql)=\
ABSOLUTE ACTION ADD ADMIN AFTER AGGREGATE \
ALIAS ALL ALLOCATE ALTER AND ANY ARE ARRAY AS ASC \
ASSERTION AT AUTHORIZATION \
BEFORE BEGIN BINARY BIT BLOB BOOLEAN BOTH BREADTH BY \
CALL CASCADE CASCADED CASE CAST CATALOG CHAR CHARACTER \
CHECK CLASS CLOB CLOSE COLLATE COLLATION COLUMN COMMIT \
COMPLETION CONNECT CONNECTION CONSTRAINT CONSTRAINTS \
CONSTRUCTOR CONTINUE CORRESPONDING CREATE CROSS CUBE CURRENT \
CURRENT_DATE CURRENT_PATH CURRENT_ROLE CURRENT_TIME CURRENT_TIMESTAMP \
CURRENT_USER CURSOR CYCLE \
DATA DATE DAY DEALLOCATE DEC DECIMAL DECLARE DEFAULT \
DEFERRABLE DEFERRED DELETE DEPTH DEREF DESC DESCRIBE DESCRIPTOR \
DESTROY DESTRUCTOR DETERMINISTIC DICTIONARY DIAGNOSTICS DISCONNECT \
DISTINCT DOMAIN DOUBLE DROP DYNAMIC \
EACH ELSE END END-EXEC EQUALS ESCAPE EVERY EXCEPT \
EXCEPTION EXEC EXECUTE EXTERNAL \
FALSE FETCH FIRST FLOAT FOR FOREIGN FOUND FROM FREE FULL \
FUNCTION \
GENERAL GET GLOBAL GO GOTO GRANT GROUP GROUPING \
HAVING HOST HOUR \
IDENTITY IGNORE IMMEDIATE IN INDICATOR INITIALIZE INITIALLY \
INNER INOUT INPUT INSERT INT INTEGER INTERSECT INTERVAL \
INTO IS ISOLATION ITERATE \
JOIN \
KEY \
LANGUAGE LARGE LAST LATERAL LEADING LEFT LESS LEVEL LIKE \
LIMIT LOCAL LOCALTIME LOCALTIMESTAMP LOCATOR \
MAP MATCH MINUTE MODIFIES MODIFY MODULE MONTH \
NAMES NATIONAL NATURAL NCHAR NCLOB NEW NEXT NO NONE \
NOT NULL NUMERIC \
OBJECT OF OFF OLD ON ONLY OPEN OPERATION OPTION \
OR ORDER ORDINALITY OUT OUTER OUTPUT \
PAD PARAMETER PARAMETERS PARTIAL PATH POSTFIX PRECISION PREFIX \
PREORDER PREPARE PRESERVE PRIMARY \
PRIOR PRIVILEGES PROCEDURE PUBLIC \
READ READS REAL RECURSIVE REF REFERENCES REFERENCING RELATIVE \
RESTRICT RESULT RETURN RETURNS REVOKE RIGHT \
ROLE ROLLBACK ROLLUP ROUTINE ROW ROWS \
SAVEPOINT SCHEMA SCROLL SCOPE SEARCH SECOND SECTION SELECT \
SEQUENCE SESSION SESSION_USER SET SETS SIZE SMALLINT SOME| SPACE \
SPECIFIC SPECIFICTYPE SQL SQLEXCEPTION SQLSTATE SQLWARNING START \
STATE STATEMENT STATIC STRUCTURE SYSTEM_USER \
TABLE TEMPORARY TERMINATE THAN THEN TIME TIMESTAMP \
TIMEZONE_HOUR TIMEZONE_MINUTE TO TRAILING TRANSACTION TRANSLATION \
TREAT TRIGGER TRUE \
UNDER UNION UNIQUE UNKNOWN \
UNNEST UPDATE USAGE USER USING \
VALUE VALUES VARCHAR VARIABLE VARYING VIEW \
WHEN WHENEVER WHERE WITH WITHOUT WORK WRITE \
YEAR \
ZONE

keywords.$(file.patterns.plsql)=\
ALL ALTER AND ANY ARRAY AS ASC AT AUTHID AVG BEGIN BETWEEN \
BINARY_INTEGER \
BODY BOOLEAN BULK BY CHAR CHAR_BASE CHECK CLOSE CLUSTER COLLECT \
COMMENT COMMIT COMPRESS CONNECT CONSTANT CREATE CURRENT CURRVAL \
CURSOR DATE DAY DECLARE DECIMAL DEFAULT DELETE DESC DISTINCT \
DO DROP ELSE ELSIF END EXCEPTION EXCLUSIVE EXECUTE EXISTS EXIT \
EXTENDS FALSE FETCH FLOAT FOR FORALL FROM FUNCTION GOTO GROUP \
HAVING HEAP HOUR IF IMMEDIATE IN INDEX INDICATOR INSERT INTEGER \
INTERFACE INTERSECT INTERVAL INTO IS ISOLATION JAVA LEVEL LIKE \
LIMITED LOCK LONG LOOP MAX MIN MINUS MINUTE MLSLABEL MOD MODE \
MONTH NATURAL NATURALN NEW NEXTVAL NOCOPY NOT NOWAIT NULL NUMBER \
NUMBER_BASE OCIROWID OF ON OPAQUE OPEN OPERATOR OPTION OR ORDER \
ORGANIZATION OTHERS OUT PACKAGE PARTITION PCTFREE PLS_INTEGER \
POSITIVE POSITIVEN PRAGMA PRIOR PRIVATE PROCEDURE PUBLIC RAISE \
RANGE RAW REAL RECORD REF RELEASE RETURN REVERSE ROLLBACK ROW \
ROWID ROWNUM ROWTYPE SAVEPOINT SECOND SELECT SEPARATE SET SHARE \
SMALLINT SPACE SQL SQLCODE SQLERRM START STDDEV SUBTYPE SUCCESSFUL \
SUM SYNONYM SYSDATE TABLE THEN TIME TIMESTAMP TO TRIGGER TRUE \
TYPE UID UNION UNIQUE UPDATE USE USER VALIDATE VALUES VARCHAR \
VARCHAR2 VARIANCE VIEW WHEN WHENEVER WHERE WHILE WITH WORK WRITE \
YEAR ZONE


filter.tcl=Tcl (.tcl)|*.tcl|

lexer.*.tcl=tcl

filter.itcl=itcl (.itcl)|*.itcl|

lexer.*.itcl=tcl

preprocessor.symbol.*.tcl=
preprocessor.start.*.tcl=
preprocessor.middle.*.tcl=
preprocessor.end.*.tcl=

keywordclass.tcl=after append array auto_execok auto_import auto_load \
auto_load_index auto_qualify beep binary break case catch cd clock \
close concat continue dde default echo else elseif encoding eof \
error eval exec exit expr fblocked fconfigure fcopy file \
fileevent flush for foreach format gets glob global history if \
incr info interp join lappend lindex linsert list llength load \
lrange lreplace lsearch lsort namespace open package pid \
pkg_mkIndex proc puts pwd read regexp regsub rename resource \
return scan seek set socket source split string subst switch \
tclLog tclMacPkgSearch tclPkgSetup tclPkgUnknown tell time \
trace unknown unset update uplevel upvar variable vwait while

keywordclass.tk=bell bind bindtags button canvas checkbutton console \
destroy entry event focus font frame grab grid image label listbox menu \
menubutton message pack place radiobutton raise scale scrollbar \
text tk tkwait toplevel winfo wm

keywordclass.itcl=@scope body class code common component configbody \
constructor define destructor hull import inherit itcl itk itk_component \
itk_initialize itk_interior itk_option iwidgets keep method \
private protected public

keywordclass.TkCommands=tkButtonDown tkButtonEnter tkButtonInvoke \
tkButtonLeave tkButtonUp tkCancelRepeat tkCheckRadioInvoke tkDarken \
tkEntryAutoScan 	tkEntryBackspace tkEntryButton1 tkEntryClosestGap \
tkEntryInsert tkEntryKeySelect tkEntryMouseSelect tkEntryNextWord \
tkEntryPaste tkEntryPreviousWord tkEntrySeeInsert tkEntrySetCursor \
tkEntryTranspose tkEventMotifBindings tkFDGetFileTypes tkFirstMenu \
tkFocusGroup_Destroy tkFocusGroup_In tkFocusGroup_Out tkFocusOK \
tkListboxAutoScan tkListboxBeginExtend tkListboxBeginSelect \
tkListboxBeginToggle tkListboxCancel tkListboxDataExtend \
tkListboxExtendUpDown tkListboxMotion tkListboxSelectAll \
tkListboxUpDown tkMbButtonUp tkMbEnter tkMbLeave tkMbMotion \
tkMbPost tkMenuButtonDown tkMenuDownArrow tkMenuDup tkMenuEscape \
tkMenuFind tkMenuFindName tkMenuFirstEntry tkMenuInvoke tkMenuLeave \
tkMenuLeftArrow tkMenuMotion tkMenuNextEntry tkMenuNextMenu \
tkMenuRightArrow tkMenuUnpost tkMenuUpArrow tkMessageBox \
tkPostOverPoint tkRecolorTree tkRestoreOldGrab tkSaveGrabInfo \
tkScaleActivate tkScaleButton2Down tkScaleButtonDown \
tkScaleControlPress tkScaleDrag tkScaleEndDrag tkScaleIncrement \
tkScreenChanged tkScrollButton2Down tkScrollButtonDown \
tkScrollButtonUp tkScrollByPages tkScrollByUnits tkScrollDrag \
tkScrollEndDrag tkScrollSelect tkScrollStartDrag tkScrollToPos  \
tkScrollTopBottom tkTabToWindow tkTearOffMenu tkTextAutoScan \
tkTextButton1 tkTextClosestGap tkTextInsert tkTextKeyExtend \
tkTextKeySelect tkTextNextPara tkTextNextPos tkTextNextWord \
tkTextPaste tkTextPrevPara tkTextPrevPos tkTextResetAnchor \
tkTextScrollPages tkTextSelectTo tkTextSetCursor tkTextTranspose
tkTextUpDownLine tkTraverseToMenu tkTraverseWithinMenu tk_bisque
tk_chooseColor tk_dialog tk_focusFollowsMouse tk_focusNext \
tk_focusPrev tk_getOpenFile tk_getSaveFile tk_messageBox \
tk_optionMenu tk_popup tk_setPalette tk_textCopy tk_textCut \
tk_textPaste

keywords.*.tcl=$(keywordclass.tcl) $(keywordclass.tk) $(keywordclass.TkCommands) 

keywords.*.itcl=$(keywordclass.tcl) $(keywordclass.tk) $(keywordclass.itcl) \
$(keywordclass.TkCommands) 

statement.end.*.tcl=8  ;
statement.lookback.*.tcl=1
block.start.*.tcl=4 {
block.end.*.tcl=4 }

comment.block.tcl=#~
comment.box.start.tcl=##
comment.box.middle.tcl= # 
comment.box.end.tcl= ##

style.tcl.0=fore:#808080
style.tcl.1=fore:#007F00,$(font.comment)
style.tcl.2=fore:#007F7F
style.tcl.3=fore:#7F007F,$(font.monospace)
style.tcl.4=fore:#7F007F,$(font.monospace)
style.tcl.5=fore:#00007F,bold
style.tcl.6=fore:#7F0000
style.tcl.7=fore:#7F0000
style.tcl.8=fore:#0000FF,bold
style.tcl.9=fore:#007F7F,bold
style.tcl.10=bold
style.tcl.11=
style.tcl.12=fore:#7F7F7F
style.tcl.13=fore:#000000,$(font.monospace),back:#E0C0E0,eolfilled
style.tcl.34=fore:#0000FF,bold
style.tcl.35=fore:#FF0000,bold
braces.tcl.style=10

file.patterns.vb=*.vb;*.vbs;*.bas;*.frm;*.cls;*.ctl;*.pag;*.dsr;*.dob
file.patterns.wscript=*.vbs;*.dsm

filter.vb=VB (vb vbp vbs bas frm cls ctl pag dsr dob)|$(file.patterns.vb);*.vbp;*.vbg;*.mak;*.vbw|

lexer.$(file.patterns.vb)=vb
lexer.$(file.patterns.wscript)=vb

keywordclass.vb=and begin case call continue do each else elseif end erase \
error event exit false for function get gosub goto if implement in load loop lset \
me mid new next not nothing on or property raiseevent rem resume return rset \
select set stop sub then to true unload until wend while with withevents \
attribute alias as boolean byref byte byval const compare currency date declare dim double \
enum explicit friend global integer let lib long module object option optional \
preserve private property public redim single static string type variant
keywords.$(file.patterns.vb)=$(keywordclass.vb)

keywordclass.vbotherstatements=appactivate beep chdir chdrive close \
deletesetting filecopy get input kill line lock unlock lset mid mkdir name \
open print put randomize reset rmdir rset savepicture savesetting seek \
sendkeys setattr time unload width write

comment.block.vb='~

style.vb.0=fore:#000000,$(font.vbs)
style.vb.1=$(colour.notused),$(font.notused)
style.vb.2=$(colour.code.comment.line),$(font.code.comment.line)
style.vb.3=$(colour.notused),$(font.notused)
style.vb.4=$(colour.number)
style.vb.5=$(colour.keyword)
style.vb.6=$(colour.string)
style.vb.7=$(colour.notused),$(font.notused)
style.vb.8=$(colour.notused),$(font.notused)
style.vb.9=$(colour.preproc)
style.vb.10=$(colour.operator)

command.go.$(file.patterns.wscript)=$(FilePath)
command.go.subsystem.$(file.patterns.wscript)=2

command.build.$(file.patterns.wscript)=cscript "$(FilePath)"
command.build.subsystem.$(file.patterns.wscript)=1

